{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Notes \u00b6 \ud83d\uddd2 My collection of notes, tips, ideas, etc android \u00b6 acessibilidade 101 - 2017-05-17 diffutil - 2017-03-21 android alpha hex - 2016-01-27 apis \u00b6 telegram api - 2020-05-24 career \u00b6 how to review pull requests - 2019-07-03 cicd \u00b6 jenkins - list installed plugins - 2019-06-18 cooking \u00b6 notes entertainment \u00b6 books suggestions git \u00b6 fix commit and autosquash - 2020-08-06 how to prefix your commit message with a ticket number automatically - 2020-06-16 cherry pick a range of commits - 2020-05-04 list files changed between two branches - 2020-05-04 push a branch until a specific commit - 2020-05-04 human-languages \u00b6 curiosities english fran\u00e7ais ios \u00b6 cifilter - 2016-08-24 dynamic type - 2016-08-24 low power mode - 2016-08-24 string transform - 2016-08-24 uiimageview.startanimating - 2016-08-24 uiimageview.transitionwithview - 2016-08-24 cidetector - 2016-08-23 javascriptcore - 2016-08-23 nscache - 2016-08-23 nsdatadetector - 2016-08-23 javascript \u00b6 how to run a specific test in jest - 2020-03-17 datetimeformat javascript references macos \u00b6 move an off screen window back on screen - 2020-04-23 meta \u00b6 references python \u00b6 cron expressions to datetimes - 2020-07-16 clean architecture in python - 2020-07-13 colorized logs - 2020-05-15 install python versions on macos - 2020-04-28 recipes \u00b6 brigadeiro easy donuts web \u00b6 console.log and more - 2020-05-04 License \u00b6 All content here is released under CC-BY-SA license. All code here is released under MIT license. Highly inspired by aicioara/til","title":"Notes"},{"location":"#notes","text":"\ud83d\uddd2 My collection of notes, tips, ideas, etc","title":"Notes"},{"location":"#android","text":"acessibilidade 101 - 2017-05-17 diffutil - 2017-03-21 android alpha hex - 2016-01-27","title":"android"},{"location":"#apis","text":"telegram api - 2020-05-24","title":"apis"},{"location":"#career","text":"how to review pull requests - 2019-07-03","title":"career"},{"location":"#cicd","text":"jenkins - list installed plugins - 2019-06-18","title":"cicd"},{"location":"#cooking","text":"notes","title":"cooking"},{"location":"#entertainment","text":"books suggestions","title":"entertainment"},{"location":"#git","text":"fix commit and autosquash - 2020-08-06 how to prefix your commit message with a ticket number automatically - 2020-06-16 cherry pick a range of commits - 2020-05-04 list files changed between two branches - 2020-05-04 push a branch until a specific commit - 2020-05-04","title":"git"},{"location":"#human-languages","text":"curiosities english fran\u00e7ais","title":"human-languages"},{"location":"#ios","text":"cifilter - 2016-08-24 dynamic type - 2016-08-24 low power mode - 2016-08-24 string transform - 2016-08-24 uiimageview.startanimating - 2016-08-24 uiimageview.transitionwithview - 2016-08-24 cidetector - 2016-08-23 javascriptcore - 2016-08-23 nscache - 2016-08-23 nsdatadetector - 2016-08-23","title":"ios"},{"location":"#javascript","text":"how to run a specific test in jest - 2020-03-17 datetimeformat javascript references","title":"javascript"},{"location":"#macos","text":"move an off screen window back on screen - 2020-04-23","title":"macos"},{"location":"#meta","text":"references","title":"meta"},{"location":"#python","text":"cron expressions to datetimes - 2020-07-16 clean architecture in python - 2020-07-13 colorized logs - 2020-05-15 install python versions on macos - 2020-04-28","title":"python"},{"location":"#recipes","text":"brigadeiro easy donuts","title":"recipes"},{"location":"#web","text":"console.log and more - 2020-05-04","title":"web"},{"location":"#license","text":"All content here is released under CC-BY-SA license. All code here is released under MIT license. Highly inspired by aicioara/til","title":"License"},{"location":"android/acessibilidade-2017-05-17/","text":"Acessibilidade 101 \u00b6 Os slides est\u00e3o dispon\u00edveis aqui: https://speakerdeck.com/jeanpimentel/acessibilidade-no-android-101-google-io-extended-2017 Usabilidade \"Rapidez com que os utilizadores podem aprender a usar alguma coisa, a efici\u00eancia deles ao us\u00e1-la, o quanto se lembram daquilo, o grau de propens\u00e3o a erros e o quanto gostam de utiliz\u00e1-la\" - Jakob Nielsen Acessibilidade \"Possibilidade e condi\u00e7\u00e3o de alcance para utiliza\u00e7\u00e3o, com seguran\u00e7a e autonomia, de espa\u00e7os, [\u2026] informa\u00e7\u00e3o e comunica\u00e7\u00e3o, [\u2026] por pessoa com defici\u00eancia ou com mobilidade reduzida;\" - Lei 10.098/2000 Usabilidade + Acessibilidade: \u00b6 Design Universal : tudo pode ser usado por todos, independente de idade, habilidade ou situa\u00e7\u00e3o. Defici\u00eancias \u00b6 1 bilh\u00e3o de pessoas com alguma forma de defici\u00eancia 80% dessas pessoas residem em pa\u00edses em desenvolvimento Fonte: Organiza\u00e7\u00e3o Mundial da Sa\u00fade, 2011 Defici\u00eancias - Brasil \u00b6 45 milh\u00f5es de brasileiros com alguma forma de defici\u00eancia 85% vivem em \u00e1reas urbanas 18.6% - Visual 7.0% - Motora 5.1% - Auditiva 1.4% - Mental/Intelectual Fonte: IBGE, 2010 Defici\u00eancias \u00b6 Cegueira Daltonismo Hipermetropia Parkinson Imobiliza\u00e7\u00e3o M\u00e3os ocupadas Surdez Mudez ... Mitos \u00b6 Se eu consigo, todo mundo consegue Dif\u00edcil de implementar Consome muito tempo e dinheiro \u00c9 responsabilidade dos desenvolvedores Resolva problemas reais \u00b6 N\u00e3o assuma que: sua equipe sabe os problemas sua equipe pensou em tudo seus usu\u00e1rios se comportam como voc\u00ea espera Personas \u00b6 Personagens ficcionais criados para representar os diferentes grupos de usu\u00e1rios que ir\u00e3o interagir com um app, produto, servi\u00e7o etc. Ajudam o time a entender quem \u00e9 o consumidor, quais suas caracter\u00edsticas, desejos, necessidades, preocupa\u00e7\u00f5es e objetivos. Personas: Jos\u00e9 de Souza \u00b6 65 anos Aposentado Vis\u00e3o ruim, tremor nas m\u00e3os e mem\u00f3ria curta Prefere textos largos, imagens e \u00edcones chamativos Se perde facilmente durante a navega\u00e7\u00e3o Usa o telefone com letras grandes, somente para ligar para parentes e ver as fotos dos netos Limita\u00e7\u00f5es \u00b6 Vis\u00e3o: cegos \u00b6 N\u00e3o podem escanear o conte\u00fado Dif\u00edcil de acessar informa\u00e7\u00f5es visuais Limitado pelos leitores de telas Vis\u00e3o: baixa vis\u00e3o \u00b6 Glaucoma, catarata, hipermetropia\u2026 N\u00e3o conseguem ler textos pequenos sem a lupa Textos em imagens s\u00e3o dif\u00edceis de ler Baixo contraste e resolu\u00e7\u00e3o dificultam muito Vis\u00e3o: dalt\u00f4nicos \u00b6 8% da popula\u00e7\u00e3o masculina (1/12) Variados tipos Baixo contraste \u00e9 p\u00e9ssimo Problemas para ler gr\u00e1ficos Audi\u00e7\u00e3o \u00b6 Alertas sonoros devem possuir alternativas \u00c1udios devem possuir transcri\u00e7\u00f5es V\u00eddeos devem possuir legendas Mobilidade \u00b6 N\u00e3o conseguem usar o touchscreen Se cansam facilmente Precisam de bot\u00f5es extras ou teclados Servi\u00e7os do Android \u00b6 Talkback Brailleback Switch Access Voice Access E como fazer? \u00b6 Cor \u00b6 Daltonismo: Developer Options > Simulate color space Contraste \u00b6 Rela\u00e7\u00e3o de contraste recomendada pela WCAG (Web Content Accessibility Guidelines). Quanto maior a diferen\u00e7a, maior o contraste. 4.5:1 AA 7:1 AAA Exemplos: texto #999 no fundo branco #fff: 2.8 \ud83d\udc4e texto #777 no fundo branco #fff: 4.5 \ud83d\udc4d texto #555 no fundo branco #fff: 7.5 \ud83d\udc4f \u00c1rea m\u00ednima de toque \u00b6 48dp , aproximadamente 9mm Dica: android:minHeight , android:minWidth Apesar de n\u00e3o recomendado, \u00e9 poss\u00edvel aumentar a \u00e1rea de toque programaticamente com o uso de TouchDelegate Fontes \u00b6 Sempre use dimens\u00f5es em sp (scale-independent) Layouts devem ser responsivos Altere o tamanho da fonte nas configura\u00e7\u00f5es do dispositivo e teste Content Description \u00b6 Semelhante ao ALT do HTML, \u00e9 um texto descritivo para os elementos: ImageButton , ImageView , Checkbox Se o elemento for apenas decorativo, use @null <ImageView ... android:contentDescription= \"@null\" android:src= \"@drawable/ic_music_note\" /> N\u00e3o se esque\u00e7a dos elementos din\u00e2micos: private void updateImageButton () { if ( playing ) { playPauseImageButton . setImageResource ( R . drawable . ic_pause ); playPauseImageButton . setContentDescription ( getString ( R . string . pause )); } else { playPauseImageButton . setImageResource ( R . drawable . ic_play ); playPauseImageButton . setContentDescription ( getString ( R . string . play )); } } EditText \u00b6 android:labelFor no TextView android:hint no EditText <TextView android:labelFor= \"@+id/email\" android:text= \"@string/email\" \u2026 /> <EditText android:id= \"@+id/email\" android:hint= \"@string/email\" \u2026 /> Live Region \u00b6 Usado para altera\u00e7\u00f5es din\u00e2micas, sem que seja necess\u00e1rio o foco. Faz com que o TalkBack anuncie as mudan\u00e7as. Op\u00e7\u00f5es: none , polite , assertive <TextView android:id= \"@+id/status\" android:layout_width= \"match_parent\" android:layout_height= \"wrap_content\" android:accessibilityLiveRegion= \"polite\" /> Agrupamento de conte\u00fado \u00b6 Evitar que o Talkback anuncie os conte\u00fados separadamente: android:focusable + ViewGroups <RelativeLayout android:id= \"@+id/song_container\" android:focusable= \"true\" > <TextView android:id= \"@+id/label_song_name\" android:text= \"Name\" /> <TextView android:id= \"@+id/value_song_name\" android:text= \"Hey Jude\" /> Ordena\u00e7\u00e3o do Foco \u00b6 Suporte a navega\u00e7\u00e3o por teclados externos. android:nextFocusForward (Next) android:nextFocusUp android:nextFocusDown android:nextFocusLeft android:nextFocusRight Aten\u00e7\u00e3o: CustomViews \u00b6 Podem ser problem\u00e1ticas! \u00c9 responsabilidade do desenvolvedor: Tratar navega\u00e7\u00e3o via teclado Implementar as APIs de acessibilidade Popular, tratar e lan\u00e7ar eventos: CLICKED, FOCUSED, SCROLLED\u2026 Fa\u00e7a testes \u00b6 Android Lint Accessibility Scanner Talkback Voice Access Color Simulation USU\u00c1RIOS REAIS!","title":"Acessibilidade 101"},{"location":"android/acessibilidade-2017-05-17/#acessibilidade-101","text":"Os slides est\u00e3o dispon\u00edveis aqui: https://speakerdeck.com/jeanpimentel/acessibilidade-no-android-101-google-io-extended-2017 Usabilidade \"Rapidez com que os utilizadores podem aprender a usar alguma coisa, a efici\u00eancia deles ao us\u00e1-la, o quanto se lembram daquilo, o grau de propens\u00e3o a erros e o quanto gostam de utiliz\u00e1-la\" - Jakob Nielsen Acessibilidade \"Possibilidade e condi\u00e7\u00e3o de alcance para utiliza\u00e7\u00e3o, com seguran\u00e7a e autonomia, de espa\u00e7os, [\u2026] informa\u00e7\u00e3o e comunica\u00e7\u00e3o, [\u2026] por pessoa com defici\u00eancia ou com mobilidade reduzida;\" - Lei 10.098/2000","title":"Acessibilidade 101"},{"location":"android/acessibilidade-2017-05-17/#usabilidade-acessibilidade","text":"Design Universal : tudo pode ser usado por todos, independente de idade, habilidade ou situa\u00e7\u00e3o.","title":"Usabilidade + Acessibilidade:"},{"location":"android/acessibilidade-2017-05-17/#deficiencias","text":"1 bilh\u00e3o de pessoas com alguma forma de defici\u00eancia 80% dessas pessoas residem em pa\u00edses em desenvolvimento Fonte: Organiza\u00e7\u00e3o Mundial da Sa\u00fade, 2011","title":"Defici\u00eancias"},{"location":"android/acessibilidade-2017-05-17/#deficiencias-brasil","text":"45 milh\u00f5es de brasileiros com alguma forma de defici\u00eancia 85% vivem em \u00e1reas urbanas 18.6% - Visual 7.0% - Motora 5.1% - Auditiva 1.4% - Mental/Intelectual Fonte: IBGE, 2010","title":"Defici\u00eancias - Brasil"},{"location":"android/acessibilidade-2017-05-17/#deficiencias_1","text":"Cegueira Daltonismo Hipermetropia Parkinson Imobiliza\u00e7\u00e3o M\u00e3os ocupadas Surdez Mudez ...","title":"Defici\u00eancias"},{"location":"android/acessibilidade-2017-05-17/#mitos","text":"Se eu consigo, todo mundo consegue Dif\u00edcil de implementar Consome muito tempo e dinheiro \u00c9 responsabilidade dos desenvolvedores","title":"Mitos"},{"location":"android/acessibilidade-2017-05-17/#resolva-problemas-reais","text":"N\u00e3o assuma que: sua equipe sabe os problemas sua equipe pensou em tudo seus usu\u00e1rios se comportam como voc\u00ea espera","title":"Resolva problemas reais"},{"location":"android/acessibilidade-2017-05-17/#personas","text":"Personagens ficcionais criados para representar os diferentes grupos de usu\u00e1rios que ir\u00e3o interagir com um app, produto, servi\u00e7o etc. Ajudam o time a entender quem \u00e9 o consumidor, quais suas caracter\u00edsticas, desejos, necessidades, preocupa\u00e7\u00f5es e objetivos.","title":"Personas"},{"location":"android/acessibilidade-2017-05-17/#personas-jose-de-souza","text":"65 anos Aposentado Vis\u00e3o ruim, tremor nas m\u00e3os e mem\u00f3ria curta Prefere textos largos, imagens e \u00edcones chamativos Se perde facilmente durante a navega\u00e7\u00e3o Usa o telefone com letras grandes, somente para ligar para parentes e ver as fotos dos netos","title":"Personas: Jos\u00e9 de Souza"},{"location":"android/acessibilidade-2017-05-17/#limitacoes","text":"","title":"Limita\u00e7\u00f5es"},{"location":"android/acessibilidade-2017-05-17/#visao-cegos","text":"N\u00e3o podem escanear o conte\u00fado Dif\u00edcil de acessar informa\u00e7\u00f5es visuais Limitado pelos leitores de telas","title":"Vis\u00e3o: cegos"},{"location":"android/acessibilidade-2017-05-17/#visao-baixa-visao","text":"Glaucoma, catarata, hipermetropia\u2026 N\u00e3o conseguem ler textos pequenos sem a lupa Textos em imagens s\u00e3o dif\u00edceis de ler Baixo contraste e resolu\u00e7\u00e3o dificultam muito","title":"Vis\u00e3o: baixa vis\u00e3o"},{"location":"android/acessibilidade-2017-05-17/#visao-daltonicos","text":"8% da popula\u00e7\u00e3o masculina (1/12) Variados tipos Baixo contraste \u00e9 p\u00e9ssimo Problemas para ler gr\u00e1ficos","title":"Vis\u00e3o: dalt\u00f4nicos"},{"location":"android/acessibilidade-2017-05-17/#audicao","text":"Alertas sonoros devem possuir alternativas \u00c1udios devem possuir transcri\u00e7\u00f5es V\u00eddeos devem possuir legendas","title":"Audi\u00e7\u00e3o"},{"location":"android/acessibilidade-2017-05-17/#mobilidade","text":"N\u00e3o conseguem usar o touchscreen Se cansam facilmente Precisam de bot\u00f5es extras ou teclados","title":"Mobilidade"},{"location":"android/acessibilidade-2017-05-17/#servicos-do-android","text":"Talkback Brailleback Switch Access Voice Access","title":"Servi\u00e7os do Android"},{"location":"android/acessibilidade-2017-05-17/#e-como-fazer","text":"","title":"E como fazer?"},{"location":"android/acessibilidade-2017-05-17/#cor","text":"Daltonismo: Developer Options > Simulate color space","title":"Cor"},{"location":"android/acessibilidade-2017-05-17/#contraste","text":"Rela\u00e7\u00e3o de contraste recomendada pela WCAG (Web Content Accessibility Guidelines). Quanto maior a diferen\u00e7a, maior o contraste. 4.5:1 AA 7:1 AAA Exemplos: texto #999 no fundo branco #fff: 2.8 \ud83d\udc4e texto #777 no fundo branco #fff: 4.5 \ud83d\udc4d texto #555 no fundo branco #fff: 7.5 \ud83d\udc4f","title":"Contraste"},{"location":"android/acessibilidade-2017-05-17/#area-minima-de-toque","text":"48dp , aproximadamente 9mm Dica: android:minHeight , android:minWidth Apesar de n\u00e3o recomendado, \u00e9 poss\u00edvel aumentar a \u00e1rea de toque programaticamente com o uso de TouchDelegate","title":"\u00c1rea m\u00ednima de toque"},{"location":"android/acessibilidade-2017-05-17/#fontes","text":"Sempre use dimens\u00f5es em sp (scale-independent) Layouts devem ser responsivos Altere o tamanho da fonte nas configura\u00e7\u00f5es do dispositivo e teste","title":"Fontes"},{"location":"android/acessibilidade-2017-05-17/#content-description","text":"Semelhante ao ALT do HTML, \u00e9 um texto descritivo para os elementos: ImageButton , ImageView , Checkbox Se o elemento for apenas decorativo, use @null <ImageView ... android:contentDescription= \"@null\" android:src= \"@drawable/ic_music_note\" /> N\u00e3o se esque\u00e7a dos elementos din\u00e2micos: private void updateImageButton () { if ( playing ) { playPauseImageButton . setImageResource ( R . drawable . ic_pause ); playPauseImageButton . setContentDescription ( getString ( R . string . pause )); } else { playPauseImageButton . setImageResource ( R . drawable . ic_play ); playPauseImageButton . setContentDescription ( getString ( R . string . play )); } }","title":"Content Description"},{"location":"android/acessibilidade-2017-05-17/#edittext","text":"android:labelFor no TextView android:hint no EditText <TextView android:labelFor= \"@+id/email\" android:text= \"@string/email\" \u2026 /> <EditText android:id= \"@+id/email\" android:hint= \"@string/email\" \u2026 />","title":"EditText"},{"location":"android/acessibilidade-2017-05-17/#live-region","text":"Usado para altera\u00e7\u00f5es din\u00e2micas, sem que seja necess\u00e1rio o foco. Faz com que o TalkBack anuncie as mudan\u00e7as. Op\u00e7\u00f5es: none , polite , assertive <TextView android:id= \"@+id/status\" android:layout_width= \"match_parent\" android:layout_height= \"wrap_content\" android:accessibilityLiveRegion= \"polite\" />","title":"Live Region"},{"location":"android/acessibilidade-2017-05-17/#agrupamento-de-conteudo","text":"Evitar que o Talkback anuncie os conte\u00fados separadamente: android:focusable + ViewGroups <RelativeLayout android:id= \"@+id/song_container\" android:focusable= \"true\" > <TextView android:id= \"@+id/label_song_name\" android:text= \"Name\" /> <TextView android:id= \"@+id/value_song_name\" android:text= \"Hey Jude\" />","title":"Agrupamento de conte\u00fado"},{"location":"android/acessibilidade-2017-05-17/#ordenacao-do-foco","text":"Suporte a navega\u00e7\u00e3o por teclados externos. android:nextFocusForward (Next) android:nextFocusUp android:nextFocusDown android:nextFocusLeft android:nextFocusRight","title":"Ordena\u00e7\u00e3o do Foco"},{"location":"android/acessibilidade-2017-05-17/#atencao-customviews","text":"Podem ser problem\u00e1ticas! \u00c9 responsabilidade do desenvolvedor: Tratar navega\u00e7\u00e3o via teclado Implementar as APIs de acessibilidade Popular, tratar e lan\u00e7ar eventos: CLICKED, FOCUSED, SCROLLED\u2026","title":"Aten\u00e7\u00e3o: CustomViews"},{"location":"android/acessibilidade-2017-05-17/#faca-testes","text":"Android Lint Accessibility Scanner Talkback Voice Access Color Simulation USU\u00c1RIOS REAIS!","title":"Fa\u00e7a testes"},{"location":"android/alpha-hex-2016-01-27/","text":"Android Alpha Hex \u00b6 % Hex % Hextitle":"Android Alpha Hex"},{"location":"android/alpha-hex-2016-01-27/#android-alpha-hex","text":"% Hex % Hextitle":"Android Alpha Hex"},{"location":"android/diff-util-2017-03-21/","text":"DiffUtil \u00b6 Os slides est\u00e3o dispon\u00edveis aqui: https://speakerdeck.com/jeanpimentel/diffutil Algumas listas s\u00e3o constantemente atualizadas por diversos motivos: geolocaliza\u00e7\u00e3o, ordena\u00e7\u00e3o, uso de filtros, dados em tempo real etc. Antes Depois de adicionar um filtro Quando isso ocorre, passamos a nova lista para o Adapter e geralmente chamamos notifyDataSetChanged() . Essa opera\u00e7\u00e3o \u00e9 custosa, pois notifyDataSetChanged() invalidar\u00e1 todos os dados e todas as views \"vis\u00edveis\" ser\u00e3o destru\u00eddas e recriadas. H\u00e1 quem tamb\u00e9m recrie o Adapter nesses casos, mas isso \u00e9 ainda mais custoso. DiffUtil \u00b6 Classe auxiliar contida na support-v7 que calcula a diferen\u00e7a entre duas listas e retorna uma lista de opera\u00e7\u00f5es a serem feitas para essa convers\u00e3o. \u00c9 necess\u00e1rio estender DiffUtil.Callback e implementar os m\u00e9todos: int getOldListSize (); int getNewListSize (); boolean areItemsTheSame ( int oldItemPosition , int newItemPosition ); boolean areContentsTheSame ( int oldItemPosition , int newItemPosition ); Object getChangePayload ( int oldItemPosition , int newItemPosition ); Exemplo: public class PlacesDiffCallback extends DiffUtil . Callback { private List < Place > oldItems ; private List < Place > newItems ; public PlacesDiffCallback ( List < Place > oldItems , List < Place > newItems ) { this . oldItems = oldItems ; this . newItems = newItems ; } @Override public int getOldListSize () { return oldItems . size (); } @Override public int getNewListSize () { return newItems . size (); } @Override public boolean areItemsTheSame ( int oldItemPosition , int newItemPosition ) { return newItems . get ( newItemPosition ). getId () == oldItems . get ( oldItemPosition ). getId (); } @Override public boolean areContentsTheSame ( int oldItemPosition , int newItemPosition ) { return newItems . get ( newItemPosition ). equals ( oldItems . get ( oldItemPosition )); } @Nullable @Override public Object getChangePayload ( int oldItemPosition , int newItemPosition ) { Place newPlace = newItems . get ( newItemPosition ); Place oldPlace = oldItems . get ( oldItemPosition ); Bundle diffBundle = new Bundle (); if ( newPlace . getDistance () != oldPlace . getDistance ()) { diffBundle . putInt ( Place . KEY_DISTANCE , newPlace . getDistance ()); } if ( ! newPlace . getPrice (). equals ( oldPlace . getPrice ())) { diffBundle . putString ( Place . KEY_PRICE , newPlace . getPrice ()); } if ( ! newPlace . getWaitingTime (). equals ( oldPlace . getWaitingTime ())) { diffBundle . putString ( Place . KEY_WAITING_TIME , newPlace . getWaitingTime ()); } if ( newPlace . hasFreeDelivery () != oldPlace . hasFreeDelivery ()) { diffBundle . putBoolean ( Place . KEY_FREE_DELIVERY , newPlace . hasFreeDelivery ()); } return diffBundle . size () == 0 ? null : diffBundle ; } } Fluxograma: DiffUtil + DiffUtil.Callback \u00b6 No nosso exemplo, depois de adicionarmos um filtro na nossa tela, chamamos nossa API e como resposta teremos uma nova lista: public void onListChanged ( List < Place > newPlaces ) { PlacesDiffCallback callback = new PlacesDiffCallback ( places , newPlaces ); DiffUtil . DiffResult diffResult = DiffUtil . calculateDiff ( callback ); diffResult . dispatchUpdatesTo ( adapter ); } DiffResult \u00e9 um objeto que contem todas as altera\u00e7\u00f5es que dever\u00e3o ser aplicadas no seu adapter. E isso \u00e9 feito com a chamada dispatchUpdatesTo(adapter) . Considera\u00e7\u00f5es \u00b6 N\u00e3o bloqueie sua UI. Obtenha o DiffResult em background e aplique na mainThread. O DiffUtil utiliza o algoritmo de Eugene Myers, de complexidade O(n) . No entanto, se houver movimenta\u00e7\u00e3o de itens, a complexidade \u00e9 aumentada em O(n^2) , onde n = n\u00famero de elementos adicionados e removidos. Se suas listas s\u00e3o ordenadas sempre pelo mesmo crit\u00e9rio, desabilite a detec\u00e7\u00e3o de movimento. Source: https://medium.com/@iammert/using-diffutil-in-android-recyclerview-bdca8e4fbb00#.pot2fgqlq","title":"DiffUtil"},{"location":"android/diff-util-2017-03-21/#diffutil","text":"Os slides est\u00e3o dispon\u00edveis aqui: https://speakerdeck.com/jeanpimentel/diffutil Algumas listas s\u00e3o constantemente atualizadas por diversos motivos: geolocaliza\u00e7\u00e3o, ordena\u00e7\u00e3o, uso de filtros, dados em tempo real etc. Antes Depois de adicionar um filtro Quando isso ocorre, passamos a nova lista para o Adapter e geralmente chamamos notifyDataSetChanged() . Essa opera\u00e7\u00e3o \u00e9 custosa, pois notifyDataSetChanged() invalidar\u00e1 todos os dados e todas as views \"vis\u00edveis\" ser\u00e3o destru\u00eddas e recriadas. H\u00e1 quem tamb\u00e9m recrie o Adapter nesses casos, mas isso \u00e9 ainda mais custoso.","title":"DiffUtil"},{"location":"android/diff-util-2017-03-21/#diffutil_1","text":"Classe auxiliar contida na support-v7 que calcula a diferen\u00e7a entre duas listas e retorna uma lista de opera\u00e7\u00f5es a serem feitas para essa convers\u00e3o. \u00c9 necess\u00e1rio estender DiffUtil.Callback e implementar os m\u00e9todos: int getOldListSize (); int getNewListSize (); boolean areItemsTheSame ( int oldItemPosition , int newItemPosition ); boolean areContentsTheSame ( int oldItemPosition , int newItemPosition ); Object getChangePayload ( int oldItemPosition , int newItemPosition ); Exemplo: public class PlacesDiffCallback extends DiffUtil . Callback { private List < Place > oldItems ; private List < Place > newItems ; public PlacesDiffCallback ( List < Place > oldItems , List < Place > newItems ) { this . oldItems = oldItems ; this . newItems = newItems ; } @Override public int getOldListSize () { return oldItems . size (); } @Override public int getNewListSize () { return newItems . size (); } @Override public boolean areItemsTheSame ( int oldItemPosition , int newItemPosition ) { return newItems . get ( newItemPosition ). getId () == oldItems . get ( oldItemPosition ). getId (); } @Override public boolean areContentsTheSame ( int oldItemPosition , int newItemPosition ) { return newItems . get ( newItemPosition ). equals ( oldItems . get ( oldItemPosition )); } @Nullable @Override public Object getChangePayload ( int oldItemPosition , int newItemPosition ) { Place newPlace = newItems . get ( newItemPosition ); Place oldPlace = oldItems . get ( oldItemPosition ); Bundle diffBundle = new Bundle (); if ( newPlace . getDistance () != oldPlace . getDistance ()) { diffBundle . putInt ( Place . KEY_DISTANCE , newPlace . getDistance ()); } if ( ! newPlace . getPrice (). equals ( oldPlace . getPrice ())) { diffBundle . putString ( Place . KEY_PRICE , newPlace . getPrice ()); } if ( ! newPlace . getWaitingTime (). equals ( oldPlace . getWaitingTime ())) { diffBundle . putString ( Place . KEY_WAITING_TIME , newPlace . getWaitingTime ()); } if ( newPlace . hasFreeDelivery () != oldPlace . hasFreeDelivery ()) { diffBundle . putBoolean ( Place . KEY_FREE_DELIVERY , newPlace . hasFreeDelivery ()); } return diffBundle . size () == 0 ? null : diffBundle ; } } Fluxograma:","title":"DiffUtil"},{"location":"android/diff-util-2017-03-21/#diffutil-diffutilcallback","text":"No nosso exemplo, depois de adicionarmos um filtro na nossa tela, chamamos nossa API e como resposta teremos uma nova lista: public void onListChanged ( List < Place > newPlaces ) { PlacesDiffCallback callback = new PlacesDiffCallback ( places , newPlaces ); DiffUtil . DiffResult diffResult = DiffUtil . calculateDiff ( callback ); diffResult . dispatchUpdatesTo ( adapter ); } DiffResult \u00e9 um objeto que contem todas as altera\u00e7\u00f5es que dever\u00e3o ser aplicadas no seu adapter. E isso \u00e9 feito com a chamada dispatchUpdatesTo(adapter) .","title":"DiffUtil + DiffUtil.Callback"},{"location":"android/diff-util-2017-03-21/#consideracoes","text":"N\u00e3o bloqueie sua UI. Obtenha o DiffResult em background e aplique na mainThread. O DiffUtil utiliza o algoritmo de Eugene Myers, de complexidade O(n) . No entanto, se houver movimenta\u00e7\u00e3o de itens, a complexidade \u00e9 aumentada em O(n^2) , onde n = n\u00famero de elementos adicionados e removidos. Se suas listas s\u00e3o ordenadas sempre pelo mesmo crit\u00e9rio, desabilite a detec\u00e7\u00e3o de movimento. Source: https://medium.com/@iammert/using-diffutil-in-android-recyclerview-bdca8e4fbb00#.pot2fgqlq","title":"Considera\u00e7\u00f5es"},{"location":"apis/telegram-2020-05-24/","text":"Telegram API \u00b6 How to create a bot and use Telegram as a notification tool Telegram Bots Bots are third-party applications that run inside Telegram. Users can interact with bots by sending them messages, commands and inline requests. You control your bots using HTTPS requests to our Bot API. Steps: \u00b6 Open telegram and talk to BotFather https://t.me/botfather . Just type /newbot and follow the instructions. Once created, you'll receive a token. SAVE IT! Let's suppose the token is 1133220044:ABDghabc123_p6k3rkp6abcdef1a2Taz_xz Now, open a chat with the bot you created and send some messages. We are doing that to find your chat_id . To discover that, we have to mount a URL with our token: https://api.telegram.org/bot{token}/getUpdates In our case, https://api.telegram.org/bot1133220044:ABDghabc123_p6k3rkp6abcdef1a2Taz_xz/getUpdates Just open this url and you will see something like this: { \"ok\" : true , \"result\" :[ { \"update_id\" : 123456789 , \"message\" :{ \"message_id\" : \"...\" , \"from\" :{}, \"chat\" :{ \"id\" : 185270483 , \"...\" } } } ] } We want chat.id and in this case, it's equal to 185270483 Now you just have to call some URLs to send messages. Examples: \u00b6 export TELEGRAM_TOKEN = 1133220044 :ABDghabc123_p6k3rkp6abcdef1a2Taz_xz export TELEGRAM_CHAT_ID = 185270483 # Text message curl --silent --output /dev/null --show-error --fail \\ --data chat_id = \" $TELEGRAM_CHAT_ID \" \\ --data text = \"hello!\" \\ \"https://api.telegram.org/bot $TELEGRAM_TOKEN /sendMessage\" # Text message (using Markdown) curl --silent --output /dev/null --show-error --fail \\ --data chat_id = \" $TELEGRAM_CHAT_ID \" \\ --data parse_mode = \"markdown\" \\ --data text = \"*using markdown*\" \\ \"https://api.telegram.org/bot $TELEGRAM_TOKEN /sendMessage\" # Photo, from a url curl --silent --output /dev/null --show-error --fail \\ --data chat_id = \" $TELEGRAM_CHAT_ID \" \\ --data photo = \"http://theoldreader.com/kittens/600/400\" \\ --data caption = 'Hey, look this' \\ \"https://api.telegram.org/bot $TELEGRAM_TOKEN /sendPhoto\" # Photo, from your machine curl --silent --output /dev/null --show-error --fail \\ --form \"chat_id= $TELEGRAM_CHAT_ID \" \\ --form \"caption=Hey, look this\" \\ --form \"photo=@/home/path/to/picture.png\" \\ \"https://api.telegram.org/bot $TELEGRAM_TOKEN /sendPhoto\" Source: https://core.telegram.org/bots/api#available-methods","title":"Telegram API"},{"location":"apis/telegram-2020-05-24/#telegram-api","text":"How to create a bot and use Telegram as a notification tool Telegram Bots Bots are third-party applications that run inside Telegram. Users can interact with bots by sending them messages, commands and inline requests. You control your bots using HTTPS requests to our Bot API.","title":"Telegram API"},{"location":"apis/telegram-2020-05-24/#steps","text":"Open telegram and talk to BotFather https://t.me/botfather . Just type /newbot and follow the instructions. Once created, you'll receive a token. SAVE IT! Let's suppose the token is 1133220044:ABDghabc123_p6k3rkp6abcdef1a2Taz_xz Now, open a chat with the bot you created and send some messages. We are doing that to find your chat_id . To discover that, we have to mount a URL with our token: https://api.telegram.org/bot{token}/getUpdates In our case, https://api.telegram.org/bot1133220044:ABDghabc123_p6k3rkp6abcdef1a2Taz_xz/getUpdates Just open this url and you will see something like this: { \"ok\" : true , \"result\" :[ { \"update_id\" : 123456789 , \"message\" :{ \"message_id\" : \"...\" , \"from\" :{}, \"chat\" :{ \"id\" : 185270483 , \"...\" } } } ] } We want chat.id and in this case, it's equal to 185270483 Now you just have to call some URLs to send messages.","title":"Steps:"},{"location":"apis/telegram-2020-05-24/#examples","text":"export TELEGRAM_TOKEN = 1133220044 :ABDghabc123_p6k3rkp6abcdef1a2Taz_xz export TELEGRAM_CHAT_ID = 185270483 # Text message curl --silent --output /dev/null --show-error --fail \\ --data chat_id = \" $TELEGRAM_CHAT_ID \" \\ --data text = \"hello!\" \\ \"https://api.telegram.org/bot $TELEGRAM_TOKEN /sendMessage\" # Text message (using Markdown) curl --silent --output /dev/null --show-error --fail \\ --data chat_id = \" $TELEGRAM_CHAT_ID \" \\ --data parse_mode = \"markdown\" \\ --data text = \"*using markdown*\" \\ \"https://api.telegram.org/bot $TELEGRAM_TOKEN /sendMessage\" # Photo, from a url curl --silent --output /dev/null --show-error --fail \\ --data chat_id = \" $TELEGRAM_CHAT_ID \" \\ --data photo = \"http://theoldreader.com/kittens/600/400\" \\ --data caption = 'Hey, look this' \\ \"https://api.telegram.org/bot $TELEGRAM_TOKEN /sendPhoto\" # Photo, from your machine curl --silent --output /dev/null --show-error --fail \\ --form \"chat_id= $TELEGRAM_CHAT_ID \" \\ --form \"caption=Hey, look this\" \\ --form \"photo=@/home/path/to/picture.png\" \\ \"https://api.telegram.org/bot $TELEGRAM_TOKEN /sendPhoto\" Source: https://core.telegram.org/bots/api#available-methods","title":"Examples:"},{"location":"career/how-to-review-pull-requests-2019-07-03/","text":"How to Review Pull Requests \u00b6 Automate Reviewing code is work Latency is Key Be Empathetic Code reviews for new joiners Tone of the Review Use Emojis \ud83d\ude0e Make Yourself More Familiar with the Code Always Provide Suggestions for Code Improvements Talking to Each Other Leave at Least One Positive Remark Code reviews are a tradeoff Nitpick Use checklists Approach code reviews with two key goals in mind: allow for learning and growth of all parties and ship healthy code . Reviewing someone else's code is not just a technical task, it's also a human one. That gives most of its delicateness. A code review is not about going line by line and looking for fault in each line. A code review is about looking at the code as a whole to see how it fits into the larger system, is not just about being right or wrong. It is about understanding the author's approach and the implications of the code, transferring knowledge, and being collaborative. That isn't to say nit comments are never warranted, but they should not be the focus of the code review. No comment should be personal. No comment should be made about the author or the reviewer. A review must always be about the code! Automate \u00b6 If a computer can decide and enforce a rule, let the computer do it. Arguing spaces vs. tabs is not a productive use of human time. Languages and modern tooling pipelines have no shortage of ways to enforce rules (linting) and repeatedly apply them. Find your language's linter and plug it into your build pipeline. Reviewing code is work \u00b6 It's value add to the company, so you should treat it as such and really own it. It's okay to spend many hours on reviewing code, and it's okay to call it out as what you're working on. Rushed code reviews will only come back to bite you in the future. Latency is Key \u00b6 Turning around a Code Review quickly is incredibly important. Long Code Review latency can kill productivity and morale. Hearing about a PR you assigned for review 3 days ago is jarring. Oh, yeah. What was I doing here? The back-and-forth is built-in context switching. Get your team caring about code review latency and get better as a team. Be Empathetic \u00b6 As a reviewer, it's essential to provide feedback politely. Remember that you are reviewing your teammates' code who you like to talk to and go for team outings, lunches etc. Feelings can get hurt easily! So, be empathetic during your reviews. Understand that someone put time into the code you're about to review. They want it to be great. Your coworkers behave with the best of intentions, and no one wants to ship crappy code. Code reviews for new joiners \u00b6 Use the same quality bar and approach for everyone, regardless of their job title, level or when they joined the company. But pay additional attention to making the first few reviews for new joiners a great experience. Reviewers are empathetic that the recent joiner might not be aware of all the coding guidelines and might be unfamiliar with parts of the code. These reviews put additional effort into explaining alternative approaches, pointing to guides. They are also very positive in tone, celebrating the first few changes to the codebase that the author is suggesting. Tone of the Review \u00b6 Did you know that in written communication, neutral content looks more negative than it actually is? The tone of code reviews can greatly influence morale within teams. Reviews with a harsh tone contribute to a feeling of a hostile environment with their microaggressions. Opinionated language can turn people defensive, sparking heated discussions. At the same time, professional and positive tone can contribute to a more inclusive environment. People in these environments are open to constructive feedback and code reviews trigger healthy and lively discussions. Also, avoid selective ownership of the code (that is, don't use \"mine,\" \"not mine,\" \"yours\"\u2026) and don't be sarcastic, even if you are buddies as other reviewers/readers might find some comments inappropriate. Use Emojis \ud83d\ude0e \u00b6 Emojis are one of the best tools for improving your online communication. Using them automatically adds a friendly tone to your messages. You can use them when you start feeling that the conversation is getting too serious. But if that's not your style then don't force it, keep it real. Make Yourself More Familiar with the Code \u00b6 Always get in the habit of teaching, it doesn't matter if you consider yourself a junior or a senior developer. Instead of telling them what the problem is, ask them questions, make them think and use a friendly tone. Here are a few examples: Do you think maybe we could assign this to a variable and re-use it on line 9? Could we possibly use this helpful utility that already does that for us which our dear teammate Sarah built? Can we move this code in its own function so we can write more tests? What do you think about trying this option? I'm not sure if I understand the whole picture, could you explain what this function is doing? This might make them think the function name could be renamed. After they explain what it does, then follow it up with a suggestion such as: \"I get it now, sorry! I'm not sure but do you think we could rename this function to option1, option2 or something along those lines, what are your thoughts\"? Always ask them their thoughts, remember you are a reviewer, and they wrote the code so it's possible they have more context than you do. Just imagine if your co-worker said something along the lines of, \"Don't do this, just rename the function\". That phrasing is much harsher and less friendly than the example above. It sounds like you're giving them a command rather than taking into account their input. Always Provide Suggestions for Code Improvements \u00b6 Rather than just telling them, \"this code could be improved\" . Provide them with specific suggestions/examples on how it could be improved further, such as: This code works perfectly but, after I started reading, I thought of another idea that I wanted to run it by you. I'm not sure, but what about: sample code #1, sample code #2 What are your thoughts? Communicate which ideas you feel strongly about and which you don't. If you just express your preference, say that it's only your preference. If you suggest something, share proofs for why it's better (like articles, studies, books, and so on). Talking to Each Other \u00b6 Reviewers should proactively reach out to the person making the change after they do a first pass on the code and have lots of comments and questions . These people have learned that they save a lot of time, misunderstandings and hard feelings this way, over going back-and-forth on the new revisions. The fact that there are many comments on the code indicates that there is likely some misunderstanding on either side. These kinds of misunderstandings are easier identified and resolved by talking things through. When you meet face to face, you automatically develop more empathy and understand their point of view even further and alternatively, they understand yours. When you come to a conclusion, post a comment on the PR summarizing your discussion so other readers following along are aware of it and your future self will thank you for it. Leave at Least One Positive Remark \u00b6 Code Reviews by their nature are negative affairs. Tell me what's wrong with this code before I send it into the ether. They are raw affairs. Someone spent time on this and there is the expectation that you will point out how it could be better. For this reason, always leave at least one positive remark. Make it meaningful and personal. If someone has finally gotten the hang of something they've been struggling with, call it out. It can be as simple as a \ud83d\udc4d or a \" Love this. \" Leaving a few positive bits on each code review are subtle reminders that we're in this together. We all benefit if we create better code. Code reviews are a tradeoff \u00b6 Because a piece of code has room for improvement, it doesn't always mean it needs to be improved. Code reviews are a tradeoff between quality and velocity and depending on the scope and stage of the project it might make sense to let a few things behind. Don't increase the scope of the pull request. If you think of new things that need to be done, create a new pull request/task for that matter. Nitpick \u00b6 While reviewing code, you may find something that is a nitpick i.e. it may not necessarily block the approval of the PR but is something to consider. Nitpicks are not important but technically correct. They can be related to grammar corrections, unintentional new lines, aesthetics, minor code refactor and more. Too many nitpicks are a smell of lack of tooling or a lack of standards. Reviewers who come across these frequently will look at solving this problem outside the code review process. For example, most of the common nitpick comments can be solved via automated linting. Those that cannot, can usually be resolved by the team agreeing to certain standards, following them - perhaps even automating them, eventually. Use checklists \u00b6 Omissions in particular are the hardest defects to find because it's difficult to review something that isn't there. Checklists are the most effective way to eliminate frequently made errors and to combat the challenges of omission finding. Code review checklists also provide team members with clear expectations for each type of review and can be helpful to track for reporting and process improvement purposes. Sources: \u00b6 https://smartbear.com/learn/code-review/guide-to-code-review-process/ https://books.thoughtbot.com/assets/maintaining-open-source-projects.pdf https://opensource.guide/best-practices/ https://rangle.io/blog/the-art-of-humanizing-pull-requests-prs/ https://dev.to/samjarman/giving-and-receiving-great-code-reviews https://smartbear.com/learn/code-review/best-practices-for-peer-code-review/ https://blog.pragmaticengineer.com/good-code-reviews-better-code-reviews/ https://www.freecodecamp.org/news/create-a-sane-office-environment-with-these-effective-code-review-guidelines-1d99ae2bdd47/ https://kellysutton.com/2018/10/08/8-tips-for-great-code-reviews.html https://www.freecodecamp.org/news/a-zen-manifesto-for-effective-code-reviews-e30b5c95204a/ https://blog.plaid.com/building-an-inclusive-code-review-culture/ https://medium.com/unpacking-trunk-club/designing-awesome-code-reviews-5a0d9cd867e3","title":"How to Review Pull Requests"},{"location":"career/how-to-review-pull-requests-2019-07-03/#how-to-review-pull-requests","text":"Automate Reviewing code is work Latency is Key Be Empathetic Code reviews for new joiners Tone of the Review Use Emojis \ud83d\ude0e Make Yourself More Familiar with the Code Always Provide Suggestions for Code Improvements Talking to Each Other Leave at Least One Positive Remark Code reviews are a tradeoff Nitpick Use checklists Approach code reviews with two key goals in mind: allow for learning and growth of all parties and ship healthy code . Reviewing someone else's code is not just a technical task, it's also a human one. That gives most of its delicateness. A code review is not about going line by line and looking for fault in each line. A code review is about looking at the code as a whole to see how it fits into the larger system, is not just about being right or wrong. It is about understanding the author's approach and the implications of the code, transferring knowledge, and being collaborative. That isn't to say nit comments are never warranted, but they should not be the focus of the code review. No comment should be personal. No comment should be made about the author or the reviewer. A review must always be about the code!","title":"How to Review Pull Requests"},{"location":"career/how-to-review-pull-requests-2019-07-03/#automate","text":"If a computer can decide and enforce a rule, let the computer do it. Arguing spaces vs. tabs is not a productive use of human time. Languages and modern tooling pipelines have no shortage of ways to enforce rules (linting) and repeatedly apply them. Find your language's linter and plug it into your build pipeline.","title":"Automate"},{"location":"career/how-to-review-pull-requests-2019-07-03/#reviewing-code-is-work","text":"It's value add to the company, so you should treat it as such and really own it. It's okay to spend many hours on reviewing code, and it's okay to call it out as what you're working on. Rushed code reviews will only come back to bite you in the future.","title":"Reviewing code is work"},{"location":"career/how-to-review-pull-requests-2019-07-03/#latency-is-key","text":"Turning around a Code Review quickly is incredibly important. Long Code Review latency can kill productivity and morale. Hearing about a PR you assigned for review 3 days ago is jarring. Oh, yeah. What was I doing here? The back-and-forth is built-in context switching. Get your team caring about code review latency and get better as a team.","title":"Latency is Key"},{"location":"career/how-to-review-pull-requests-2019-07-03/#be-empathetic","text":"As a reviewer, it's essential to provide feedback politely. Remember that you are reviewing your teammates' code who you like to talk to and go for team outings, lunches etc. Feelings can get hurt easily! So, be empathetic during your reviews. Understand that someone put time into the code you're about to review. They want it to be great. Your coworkers behave with the best of intentions, and no one wants to ship crappy code.","title":"Be Empathetic"},{"location":"career/how-to-review-pull-requests-2019-07-03/#code-reviews-for-new-joiners","text":"Use the same quality bar and approach for everyone, regardless of their job title, level or when they joined the company. But pay additional attention to making the first few reviews for new joiners a great experience. Reviewers are empathetic that the recent joiner might not be aware of all the coding guidelines and might be unfamiliar with parts of the code. These reviews put additional effort into explaining alternative approaches, pointing to guides. They are also very positive in tone, celebrating the first few changes to the codebase that the author is suggesting.","title":"Code reviews for new joiners"},{"location":"career/how-to-review-pull-requests-2019-07-03/#tone-of-the-review","text":"Did you know that in written communication, neutral content looks more negative than it actually is? The tone of code reviews can greatly influence morale within teams. Reviews with a harsh tone contribute to a feeling of a hostile environment with their microaggressions. Opinionated language can turn people defensive, sparking heated discussions. At the same time, professional and positive tone can contribute to a more inclusive environment. People in these environments are open to constructive feedback and code reviews trigger healthy and lively discussions. Also, avoid selective ownership of the code (that is, don't use \"mine,\" \"not mine,\" \"yours\"\u2026) and don't be sarcastic, even if you are buddies as other reviewers/readers might find some comments inappropriate.","title":"Tone of the Review"},{"location":"career/how-to-review-pull-requests-2019-07-03/#use-emojis","text":"Emojis are one of the best tools for improving your online communication. Using them automatically adds a friendly tone to your messages. You can use them when you start feeling that the conversation is getting too serious. But if that's not your style then don't force it, keep it real.","title":"Use Emojis \ud83d\ude0e"},{"location":"career/how-to-review-pull-requests-2019-07-03/#make-yourself-more-familiar-with-the-code","text":"Always get in the habit of teaching, it doesn't matter if you consider yourself a junior or a senior developer. Instead of telling them what the problem is, ask them questions, make them think and use a friendly tone. Here are a few examples: Do you think maybe we could assign this to a variable and re-use it on line 9? Could we possibly use this helpful utility that already does that for us which our dear teammate Sarah built? Can we move this code in its own function so we can write more tests? What do you think about trying this option? I'm not sure if I understand the whole picture, could you explain what this function is doing? This might make them think the function name could be renamed. After they explain what it does, then follow it up with a suggestion such as: \"I get it now, sorry! I'm not sure but do you think we could rename this function to option1, option2 or something along those lines, what are your thoughts\"? Always ask them their thoughts, remember you are a reviewer, and they wrote the code so it's possible they have more context than you do. Just imagine if your co-worker said something along the lines of, \"Don't do this, just rename the function\". That phrasing is much harsher and less friendly than the example above. It sounds like you're giving them a command rather than taking into account their input.","title":"Make Yourself More Familiar with the Code"},{"location":"career/how-to-review-pull-requests-2019-07-03/#always-provide-suggestions-for-code-improvements","text":"Rather than just telling them, \"this code could be improved\" . Provide them with specific suggestions/examples on how it could be improved further, such as: This code works perfectly but, after I started reading, I thought of another idea that I wanted to run it by you. I'm not sure, but what about: sample code #1, sample code #2 What are your thoughts? Communicate which ideas you feel strongly about and which you don't. If you just express your preference, say that it's only your preference. If you suggest something, share proofs for why it's better (like articles, studies, books, and so on).","title":"Always Provide Suggestions for Code Improvements"},{"location":"career/how-to-review-pull-requests-2019-07-03/#talking-to-each-other","text":"Reviewers should proactively reach out to the person making the change after they do a first pass on the code and have lots of comments and questions . These people have learned that they save a lot of time, misunderstandings and hard feelings this way, over going back-and-forth on the new revisions. The fact that there are many comments on the code indicates that there is likely some misunderstanding on either side. These kinds of misunderstandings are easier identified and resolved by talking things through. When you meet face to face, you automatically develop more empathy and understand their point of view even further and alternatively, they understand yours. When you come to a conclusion, post a comment on the PR summarizing your discussion so other readers following along are aware of it and your future self will thank you for it.","title":"Talking to Each Other"},{"location":"career/how-to-review-pull-requests-2019-07-03/#leave-at-least-one-positive-remark","text":"Code Reviews by their nature are negative affairs. Tell me what's wrong with this code before I send it into the ether. They are raw affairs. Someone spent time on this and there is the expectation that you will point out how it could be better. For this reason, always leave at least one positive remark. Make it meaningful and personal. If someone has finally gotten the hang of something they've been struggling with, call it out. It can be as simple as a \ud83d\udc4d or a \" Love this. \" Leaving a few positive bits on each code review are subtle reminders that we're in this together. We all benefit if we create better code.","title":"Leave at Least One Positive Remark"},{"location":"career/how-to-review-pull-requests-2019-07-03/#code-reviews-are-a-tradeoff","text":"Because a piece of code has room for improvement, it doesn't always mean it needs to be improved. Code reviews are a tradeoff between quality and velocity and depending on the scope and stage of the project it might make sense to let a few things behind. Don't increase the scope of the pull request. If you think of new things that need to be done, create a new pull request/task for that matter.","title":"Code reviews are a tradeoff"},{"location":"career/how-to-review-pull-requests-2019-07-03/#nitpick","text":"While reviewing code, you may find something that is a nitpick i.e. it may not necessarily block the approval of the PR but is something to consider. Nitpicks are not important but technically correct. They can be related to grammar corrections, unintentional new lines, aesthetics, minor code refactor and more. Too many nitpicks are a smell of lack of tooling or a lack of standards. Reviewers who come across these frequently will look at solving this problem outside the code review process. For example, most of the common nitpick comments can be solved via automated linting. Those that cannot, can usually be resolved by the team agreeing to certain standards, following them - perhaps even automating them, eventually.","title":"Nitpick"},{"location":"career/how-to-review-pull-requests-2019-07-03/#use-checklists","text":"Omissions in particular are the hardest defects to find because it's difficult to review something that isn't there. Checklists are the most effective way to eliminate frequently made errors and to combat the challenges of omission finding. Code review checklists also provide team members with clear expectations for each type of review and can be helpful to track for reporting and process improvement purposes.","title":"Use checklists"},{"location":"career/how-to-review-pull-requests-2019-07-03/#sources","text":"https://smartbear.com/learn/code-review/guide-to-code-review-process/ https://books.thoughtbot.com/assets/maintaining-open-source-projects.pdf https://opensource.guide/best-practices/ https://rangle.io/blog/the-art-of-humanizing-pull-requests-prs/ https://dev.to/samjarman/giving-and-receiving-great-code-reviews https://smartbear.com/learn/code-review/best-practices-for-peer-code-review/ https://blog.pragmaticengineer.com/good-code-reviews-better-code-reviews/ https://www.freecodecamp.org/news/create-a-sane-office-environment-with-these-effective-code-review-guidelines-1d99ae2bdd47/ https://kellysutton.com/2018/10/08/8-tips-for-great-code-reviews.html https://www.freecodecamp.org/news/a-zen-manifesto-for-effective-code-reviews-e30b5c95204a/ https://blog.plaid.com/building-an-inclusive-code-review-culture/ https://medium.com/unpacking-trunk-club/designing-awesome-code-reviews-5a0d9cd867e3","title":"Sources:"},{"location":"cicd/jenkins-list-installed-plugins-2019-06-18/","text":"Jenkins - List installed plugins \u00b6 Go to Script console, http://<your-jenkins-server>/script jenkins . model . Jenkins . instance . getPluginManager (). getPlugins (). stream (). sorted (). each { println \"${it.getShortName()} | ${it.getVersion()} | ${it.getDisplayName()}\" }","title":"Jenkins - List installed plugins"},{"location":"cicd/jenkins-list-installed-plugins-2019-06-18/#jenkins-list-installed-plugins","text":"Go to Script console, http://<your-jenkins-server>/script jenkins . model . Jenkins . instance . getPluginManager (). getPlugins (). stream (). sorted (). each { println \"${it.getShortName()} | ${it.getVersion()} | ${it.getDisplayName()}\" }","title":"Jenkins - List installed plugins"},{"location":"cooking/notes/","text":"Notes \u00b6 Salt makes everything taste better In a number of ways . Salt is one of the five basic tastes that we \u2019 re hard - wired to detect ( along with bitter , sweet , sour , and umami or savory ) . It enhances foods by essentially turning up the volume of their salty flavors . Salt can also dial down the taste of bitter foods by suppressing our perception of bitterness , and balance other tastes like sweet and sour ( salt added to desserts or vinaigrettes , for example ) . Salt also unravels ( or denatures ) the tight spiral structure of proteins , making their flavors tastier and more aromatic .","title":"Notes"},{"location":"cooking/notes/#notes","text":"Salt makes everything taste better In a number of ways . Salt is one of the five basic tastes that we \u2019 re hard - wired to detect ( along with bitter , sweet , sour , and umami or savory ) . It enhances foods by essentially turning up the volume of their salty flavors . Salt can also dial down the taste of bitter foods by suppressing our perception of bitterness , and balance other tastes like sweet and sour ( salt added to desserts or vinaigrettes , for example ) . Salt also unravels ( or denatures ) the tight spiral structure of proteins , making their flavors tastier and more aromatic .","title":"Notes"},{"location":"entertainment/books/","text":"Books \u00b6 Some non-technical books I've read. I don't remember the exact order. 2019 \u00b6 Piquenique na Estrada (Roadside Picnic) - Boris Strugatsky, Arkady Strugatsky Guerra do Velho (Old Man's War) - John Scalzi As Brigadas Fantasma (The Ghost Brigades) - John Scalzi 2018 \u00b6 O Cemit\u00e9rio (Pet Sematary) - Stephen King A M\u00e3o Esquerda da Escurid\u00e3o (The Left Hand of Darkness) - Ursula K. Le Guin Mat\u00e9ria Escura (Dark Matter) - Blacke Crouch Cama de Gato (Cat\u2019s Cradle) - Kurt Vonnegut A \u00daltima Pergunta (The Last Question) - Isaac Asimov 2017 \u00b6 O Universo Em Suas M\u00e3os (The Universe in Your Hand) - Christophe Galfard Tropas Estelares (Starship Troopers) - Robert A. Heinlein A Revolu\u00e7\u00e3o Dos Bichos (Animal Farm) - George Orwell As Cr\u00f4nicas Marcianas (The Martian Chronicles) - Ray Bradbury Jogador N\u00ba 1 (Ready Player One) - Ernest Cline Sombra do Para\u00edso (Heaven's Shadow) - David S. Goyer 2016 \u00b6 Funda\u00e7\u00e3o (Foundation) - Isaac Asimov Funda\u00e7\u00e3o e Imp\u00e9rio (Foundation and Empire) - Isaac Asimov Segunda Funda\u00e7\u00e3o (Second Foundation) - Isaac Asimov Eu, Rob\u00f4 (I, Robot) - Isaac Asimov Fahrenheit 451 - Ray Bradbury Encontro com Rama (Rendezvous with Rama) - Arthur C. Clarke 2015 \u00b6 Perdido em Marte (The Martian) - Andy Weir Doutor Sono (Doctor Sleep) - Stephen King Clube da Luta (Fight Club) - Chuck Palahniuk 1984 - George Orwell As Fontes do Para\u00edso (The Fountains of Paradise) - Arthur C. Clarke Androides Sonham com Ovelhas El\u00e9tricas? (Do Androids Dream of Electric Sheep?) - Philip K. Dick Sobrevivente (Survivor) - Chuck Palahniuk 2014 \u00b6 2001: Uma Odisseia no Espa\u00e7o (2001: A Space Odyssey) - Arthur C. Clarke 2010: Uma Odisseia no Espa\u00e7o 2 (2010: Odyssey Two) - Arthur C. Clarke O Fim da Inf\u00e2ncia (Childhood's End) - Arthur C. Clarke O Iluminado (The Shining) - Stephen King O Universo Numa Casca de Noz (The Universe in a Nutshell) - Stephen Hawking","title":"Books"},{"location":"entertainment/books/#books","text":"Some non-technical books I've read. I don't remember the exact order.","title":"Books"},{"location":"entertainment/books/#2019","text":"Piquenique na Estrada (Roadside Picnic) - Boris Strugatsky, Arkady Strugatsky Guerra do Velho (Old Man's War) - John Scalzi As Brigadas Fantasma (The Ghost Brigades) - John Scalzi","title":"2019"},{"location":"entertainment/books/#2018","text":"O Cemit\u00e9rio (Pet Sematary) - Stephen King A M\u00e3o Esquerda da Escurid\u00e3o (The Left Hand of Darkness) - Ursula K. Le Guin Mat\u00e9ria Escura (Dark Matter) - Blacke Crouch Cama de Gato (Cat\u2019s Cradle) - Kurt Vonnegut A \u00daltima Pergunta (The Last Question) - Isaac Asimov","title":"2018"},{"location":"entertainment/books/#2017","text":"O Universo Em Suas M\u00e3os (The Universe in Your Hand) - Christophe Galfard Tropas Estelares (Starship Troopers) - Robert A. Heinlein A Revolu\u00e7\u00e3o Dos Bichos (Animal Farm) - George Orwell As Cr\u00f4nicas Marcianas (The Martian Chronicles) - Ray Bradbury Jogador N\u00ba 1 (Ready Player One) - Ernest Cline Sombra do Para\u00edso (Heaven's Shadow) - David S. Goyer","title":"2017"},{"location":"entertainment/books/#2016","text":"Funda\u00e7\u00e3o (Foundation) - Isaac Asimov Funda\u00e7\u00e3o e Imp\u00e9rio (Foundation and Empire) - Isaac Asimov Segunda Funda\u00e7\u00e3o (Second Foundation) - Isaac Asimov Eu, Rob\u00f4 (I, Robot) - Isaac Asimov Fahrenheit 451 - Ray Bradbury Encontro com Rama (Rendezvous with Rama) - Arthur C. Clarke","title":"2016"},{"location":"entertainment/books/#2015","text":"Perdido em Marte (The Martian) - Andy Weir Doutor Sono (Doctor Sleep) - Stephen King Clube da Luta (Fight Club) - Chuck Palahniuk 1984 - George Orwell As Fontes do Para\u00edso (The Fountains of Paradise) - Arthur C. Clarke Androides Sonham com Ovelhas El\u00e9tricas? (Do Androids Dream of Electric Sheep?) - Philip K. Dick Sobrevivente (Survivor) - Chuck Palahniuk","title":"2015"},{"location":"entertainment/books/#2014","text":"2001: Uma Odisseia no Espa\u00e7o (2001: A Space Odyssey) - Arthur C. Clarke 2010: Uma Odisseia no Espa\u00e7o 2 (2010: Odyssey Two) - Arthur C. Clarke O Fim da Inf\u00e2ncia (Childhood's End) - Arthur C. Clarke O Iluminado (The Shining) - Stephen King O Universo Numa Casca de Noz (The Universe in a Nutshell) - Stephen Hawking","title":"2014"},{"location":"entertainment/suggestions/","text":"Suggestions \u00b6 Books \u00b6 Lock In Hyperion Cantos A Fire Upon the Deep Manga \u00b6 Dr. Stone Tv Shows \u00b6 Counterpart Continuum Eleventh Hour Le Chalet Indicamos 6 livros sci-fi de autores publicados pela primeira vez no Brasil em 2016 Guerra do Velho - John Scalzi A Hist\u00f3ria da Sua Vida e Outros Contos - Ted Chiang (inspirou A Chegada ) Faca de \u00c1gua - Paolo Bacigalupi O Problema dos Tr\u00eas Corpos - Cixin Liu Gigantes Adormecidos - Sylvain Neuvel As \u00c1guas-Vivas N\u00e3o Sabem de Si - Aline Valek","title":"Suggestions"},{"location":"entertainment/suggestions/#suggestions","text":"","title":"Suggestions"},{"location":"entertainment/suggestions/#books","text":"Lock In Hyperion Cantos A Fire Upon the Deep","title":"Books"},{"location":"entertainment/suggestions/#manga","text":"Dr. Stone","title":"Manga"},{"location":"entertainment/suggestions/#tv-shows","text":"Counterpart Continuum Eleventh Hour Le Chalet Indicamos 6 livros sci-fi de autores publicados pela primeira vez no Brasil em 2016 Guerra do Velho - John Scalzi A Hist\u00f3ria da Sua Vida e Outros Contos - Ted Chiang (inspirou A Chegada ) Faca de \u00c1gua - Paolo Bacigalupi O Problema dos Tr\u00eas Corpos - Cixin Liu Gigantes Adormecidos - Sylvain Neuvel As \u00c1guas-Vivas N\u00e3o Sabem de Si - Aline Valek","title":"Tv Shows"},{"location":"git/cherry-pick-a-range-of-commits-2020-05-04/","text":"Cherry pick a range of commits \u00b6 Instead of cherry pick commits one by one, you can pass a range of commits with: git cherry-pick A..D This command will apply commit B, C and D. If you want to include commit A as well, do: git cherry-pick A^..D","title":"Cherry pick a range of commits"},{"location":"git/cherry-pick-a-range-of-commits-2020-05-04/#cherry-pick-a-range-of-commits","text":"Instead of cherry pick commits one by one, you can pass a range of commits with: git cherry-pick A..D This command will apply commit B, C and D. If you want to include commit A as well, do: git cherry-pick A^..D","title":"Cherry pick a range of commits"},{"location":"git/fixup-2020-08-06/","text":"Fix commit and autosquash \u00b6 I like to make small commits with meaningful messages. Often I change something that I would like to add to previous commits. If I want to add the changes to the latest commit, it's easy: git commit --amend , but if not, it requires a rebase later. I used to reuse the commit messages, to make it easy to know which commits should be squashed together. And today I learned: git commit --fixup <commit hash> This command will reuse the message of <commit hash> prefixed with fixup! , like this: $ git commit --fixup bbb2222 $ git log --online ddd4444 (HEAD, my-feature-branch) fixup! A second commit ccc3333 A third commit bbb2222 A second commit aaa1111 A first commit 9999999 (main) last commit on main Then, the magic : When you want, just run git rebase --interactive --autoquash <parent branch> The editor will open with the correct order and already marked with the fixup action. Just confirm and that's it! Source: https://thoughtbot.com/blog/autosquashing-git-commits","title":"Fix commit and autosquash"},{"location":"git/fixup-2020-08-06/#fix-commit-and-autosquash","text":"I like to make small commits with meaningful messages. Often I change something that I would like to add to previous commits. If I want to add the changes to the latest commit, it's easy: git commit --amend , but if not, it requires a rebase later. I used to reuse the commit messages, to make it easy to know which commits should be squashed together. And today I learned: git commit --fixup <commit hash> This command will reuse the message of <commit hash> prefixed with fixup! , like this: $ git commit --fixup bbb2222 $ git log --online ddd4444 (HEAD, my-feature-branch) fixup! A second commit ccc3333 A third commit bbb2222 A second commit aaa1111 A first commit 9999999 (main) last commit on main Then, the magic : When you want, just run git rebase --interactive --autoquash <parent branch> The editor will open with the correct order and already marked with the fixup action. Just confirm and that's it! Source: https://thoughtbot.com/blog/autosquashing-git-commits","title":"Fix commit and autosquash"},{"location":"git/list-files-changed-between-branches-2020-05-04/","text":"List files changed between two branches \u00b6 Assuming that you are in your branch: git diff --name-only <another-branch> src/page.html src/page.js src/page.css src/anotherPage.html To check the status: git diff --name-status <another-branch> where values are: A - Added C<score> - Copied D - Deleted M - Modified R<score> - Renamed T - Type changed (i.e. regular file, symlink, submodule, \u2026) U - Unmerged X - Unknown <score> is similarity between the source and target of move or copy Source: https://git-scm.com/docs/git-diff , https://git-scm.com/docs/git-status","title":"List files changed between two branches"},{"location":"git/list-files-changed-between-branches-2020-05-04/#list-files-changed-between-two-branches","text":"Assuming that you are in your branch: git diff --name-only <another-branch> src/page.html src/page.js src/page.css src/anotherPage.html To check the status: git diff --name-status <another-branch> where values are: A - Added C<score> - Copied D - Deleted M - Modified R<score> - Renamed T - Type changed (i.e. regular file, symlink, submodule, \u2026) U - Unmerged X - Unknown <score> is similarity between the source and target of move or copy Source: https://git-scm.com/docs/git-diff , https://git-scm.com/docs/git-status","title":"List files changed between two branches"},{"location":"git/prefix-your-commit-message-2020-06-16/","text":"How To Prefix Your Commit Message With a Ticket Number Automatically \u00b6 vim .git/hooks/prepare-commit-msg #!/bin/bash FILE = $1 MESSAGE = $( cat $FILE ) TICKET = $( git rev-parse --abbrev-ref HEAD | grep -Eo '^(\\w+\\/)?(\\w+[-_])?[0-9]+' | grep -Eo '(\\w+[-])?[0-9]+' | tr \"[:lower:]\" \"[:upper:]\" ) if [[ $TICKET == \"\" || \" $MESSAGE \" == \" $TICKET \" * || \" $MESSAGE \" == \"fixup!\" * ]] ; then exit 0 ; fi echo \" $TICKET $MESSAGE \" > $FILE chmod +x .git/hooks/prepare-commit-msg Results \u00b6 myproj-123-some-feature \u2192 MYPROJ-123 feature/myproj-456-some-other-feature \u2192 MYPROJ-456 bugifx/myproj-789 \u2192 MYPROJ-789 123_some_feature \u2192 123 Source: https://medium.com/better-programming/how-to-automatically-add-the-ticket-number-in-git-commit-message-bda5426ded05","title":"How To Prefix Your Commit Message With a Ticket Number Automatically"},{"location":"git/prefix-your-commit-message-2020-06-16/#how-to-prefix-your-commit-message-with-a-ticket-number-automatically","text":"vim .git/hooks/prepare-commit-msg #!/bin/bash FILE = $1 MESSAGE = $( cat $FILE ) TICKET = $( git rev-parse --abbrev-ref HEAD | grep -Eo '^(\\w+\\/)?(\\w+[-_])?[0-9]+' | grep -Eo '(\\w+[-])?[0-9]+' | tr \"[:lower:]\" \"[:upper:]\" ) if [[ $TICKET == \"\" || \" $MESSAGE \" == \" $TICKET \" * || \" $MESSAGE \" == \"fixup!\" * ]] ; then exit 0 ; fi echo \" $TICKET $MESSAGE \" > $FILE chmod +x .git/hooks/prepare-commit-msg","title":"How To Prefix Your Commit Message With a Ticket Number Automatically"},{"location":"git/prefix-your-commit-message-2020-06-16/#results","text":"myproj-123-some-feature \u2192 MYPROJ-123 feature/myproj-456-some-other-feature \u2192 MYPROJ-456 bugifx/myproj-789 \u2192 MYPROJ-789 123_some_feature \u2192 123 Source: https://medium.com/better-programming/how-to-automatically-add-the-ticket-number-in-git-commit-message-bda5426ded05","title":"Results"},{"location":"git/push-until-some-specific-commit-2020-05-04/","text":"Push a branch until a specific commit \u00b6 git push <origin> <commit sha>:<remote branch name> Example: commit cd00e1b <- HEAD commit 78e66ef commit d7d6bc5 commit 32c2871 commit f712d0f To push until d7d6bc5 use: git push origin d7d6bc5:my-branch-name This way, 78e66ef and cd00e1b won't be pushed. Source: https://stackoverflow.com/a/3230241","title":"Push a branch until a specific commit"},{"location":"git/push-until-some-specific-commit-2020-05-04/#push-a-branch-until-a-specific-commit","text":"git push <origin> <commit sha>:<remote branch name> Example: commit cd00e1b <- HEAD commit 78e66ef commit d7d6bc5 commit 32c2871 commit f712d0f To push until d7d6bc5 use: git push origin d7d6bc5:my-branch-name This way, 78e66ef and cd00e1b won't be pushed. Source: https://stackoverflow.com/a/3230241","title":"Push a branch until a specific commit"},{"location":"human-languages/curiosities/","text":"Curiosities \u00b6 Could your language affect your ability to save money? What can economists learn from linguists? Behavioral economist Keith Chen introduces a fascinating pattern from his research: that languages without a concept for the future -- \"It rain tomorrow,\" instead of \"It will rain tomorrow\" -- correlate strongly with high savings rates. How language shapes the way we think There are about 7,000 languages spoken around the world -- and they all have different sounds, vocabularies and structures. But do they shape the way we think? Cognitive scientist Lera Boroditsky shares examples of language -- from an Aboriginal community in Australia that uses cardinal directions instead of left and right to the multiple words for blue in Russian -- that suggest the answer is a resounding yes. \"The beauty of linguistic diversity is that it reveals to us just how ingenious and how flexible the human mind is,\" Boroditsky says. \"Human minds have invented not one cognitive universe, but 7,000.\" Fantastic Features We Don't Have In The English Language There are lots of interesting features in other languages, some of which English would really benefit from having. I'm going to talk about four of them: time-independence, clusivity, absolute direction, and evidentiality. Features English is missing - but most other languages have Other languages have unique features that English just doesn't have access to. So, English, why don't you level up your skills with these linguistic tricks from around the world? What English does - but most languages can't English has unusual linguistic features most other languages don't! These skills really make English unique compared to other languages around the world. Languages Without Verb Tenses?! How can you communicate without verb tenses? It's not that hard, actually. This is a video about languages that don't have verb tense but express time in different ways, and languages that lack certain tenses.","title":"Curiosities"},{"location":"human-languages/curiosities/#curiosities","text":"Could your language affect your ability to save money? What can economists learn from linguists? Behavioral economist Keith Chen introduces a fascinating pattern from his research: that languages without a concept for the future -- \"It rain tomorrow,\" instead of \"It will rain tomorrow\" -- correlate strongly with high savings rates. How language shapes the way we think There are about 7,000 languages spoken around the world -- and they all have different sounds, vocabularies and structures. But do they shape the way we think? Cognitive scientist Lera Boroditsky shares examples of language -- from an Aboriginal community in Australia that uses cardinal directions instead of left and right to the multiple words for blue in Russian -- that suggest the answer is a resounding yes. \"The beauty of linguistic diversity is that it reveals to us just how ingenious and how flexible the human mind is,\" Boroditsky says. \"Human minds have invented not one cognitive universe, but 7,000.\" Fantastic Features We Don't Have In The English Language There are lots of interesting features in other languages, some of which English would really benefit from having. I'm going to talk about four of them: time-independence, clusivity, absolute direction, and evidentiality. Features English is missing - but most other languages have Other languages have unique features that English just doesn't have access to. So, English, why don't you level up your skills with these linguistic tricks from around the world? What English does - but most languages can't English has unusual linguistic features most other languages don't! These skills really make English unique compared to other languages around the world. Languages Without Verb Tenses?! How can you communicate without verb tenses? It's not that hard, actually. This is a video about languages that don't have verb tense but express time in different ways, and languages that lack certain tenses.","title":"Curiosities"},{"location":"human-languages/english/","text":"English \u00b6 Canadian Language Benchmarks - Online Self-Assessment Centre for Canadian Language Benchmarks Merriam-Webster - Word of the day Flo-Joe's Free Resources Cambridge Dictionary Cambdrige Free Resources","title":"English"},{"location":"human-languages/english/#english","text":"Canadian Language Benchmarks - Online Self-Assessment Centre for Canadian Language Benchmarks Merriam-Webster - Word of the day Flo-Joe's Free Resources Cambridge Dictionary Cambdrige Free Resources","title":"English"},{"location":"human-languages/francais/","text":"Fran\u00e7ais \u00b6 Alliance Fran\u00e7aise TV5 Monde InnerFrench - Podcast","title":"Fran\u00e7ais"},{"location":"human-languages/francais/#francais","text":"Alliance Fran\u00e7aise TV5 Monde InnerFrench - Podcast","title":"Fran\u00e7ais"},{"location":"ios/cidetector-2016-08-23/","text":"CIDetector \u00b6 Core Image , framework de manipula\u00e7\u00e3o de imagens Detecta: Faces (5.0, *) Ret\u00e2ngulos (8.0, *) QRCode (8.0, *) Textos (9.0, *) CIDetectorTypeFace \u00b6 @available(iOS 5.0, *) CIDetectorSmile, CIDetectorEyeBlink @available(iOS 7.0, *) let image = UIImage ( named : \"example\" ) ! let ciImage = CIImage ( CGImage : image . CIImage !) let detector = CIDetector ( ofType : CIDetectorTypeFace , context : nil , options : nil ) for f in detector . featuresInImage ( ciImage ) { guard let face = f as ? CIFaceFeature else { continue } print ( face . bounds ) // ... }","title":"CIDetector"},{"location":"ios/cidetector-2016-08-23/#cidetector","text":"Core Image , framework de manipula\u00e7\u00e3o de imagens Detecta: Faces (5.0, *) Ret\u00e2ngulos (8.0, *) QRCode (8.0, *) Textos (9.0, *)","title":"CIDetector"},{"location":"ios/cidetector-2016-08-23/#cidetectortypeface","text":"@available(iOS 5.0, *) CIDetectorSmile, CIDetectorEyeBlink @available(iOS 7.0, *) let image = UIImage ( named : \"example\" ) ! let ciImage = CIImage ( CGImage : image . CIImage !) let detector = CIDetector ( ofType : CIDetectorTypeFace , context : nil , options : nil ) for f in detector . featuresInImage ( ciImage ) { guard let face = f as ? CIFaceFeature else { continue } print ( face . bounds ) // ... }","title":"CIDetectorTypeFace"},{"location":"ios/cifilter-2016-08-24/","text":"CIFilter \u00b6 @available(iOS 5.0, *) Categorias: - Blur, ColorAdjustment, ColorEffect, CompositeOperation, DistortionEffect, Generator, GeometryAdjustment, Gradient, HalftoneEffect, Reduction, Sharpen, Stylize, TileEffect, Transition CIFilter - CISepiaTone, CIColorInvert... \u00b6 // each filter has different parameters let params = [ \"inputImage\" : image ] // other names: CIColorInvert, CIPixellate, ... let filter = CIFilter ( name : \"CISepiaTone\" , withInputParameters : params ) let output = UIImage ( CIImage : filter !. outputImage !) CIFilter - CIColorMonochrome \u00b6 let color = CIColor ( red : 1.0 , green : 0.0 , blue : 0.0 ) let params = [ \"inputImage\" : image , \"inputColor\" : color ] let filter = CIFilter ( name : \"CIColorMonochrome\" , withInputParameters : params ) let output = UIImage ( CIImage : filter !. outputImage !)","title":"CIFilter"},{"location":"ios/cifilter-2016-08-24/#cifilter","text":"@available(iOS 5.0, *) Categorias: - Blur, ColorAdjustment, ColorEffect, CompositeOperation, DistortionEffect, Generator, GeometryAdjustment, Gradient, HalftoneEffect, Reduction, Sharpen, Stylize, TileEffect, Transition","title":"CIFilter"},{"location":"ios/cifilter-2016-08-24/#cifilter-cisepiatone-cicolorinvert","text":"// each filter has different parameters let params = [ \"inputImage\" : image ] // other names: CIColorInvert, CIPixellate, ... let filter = CIFilter ( name : \"CISepiaTone\" , withInputParameters : params ) let output = UIImage ( CIImage : filter !. outputImage !)","title":"CIFilter - CISepiaTone, CIColorInvert..."},{"location":"ios/cifilter-2016-08-24/#cifilter-cicolormonochrome","text":"let color = CIColor ( red : 1.0 , green : 0.0 , blue : 0.0 ) let params = [ \"inputImage\" : image , \"inputColor\" : color ] let filter = CIFilter ( name : \"CIColorMonochrome\" , withInputParameters : params ) let output = UIImage ( CIImage : filter !. outputImage !)","title":"CIFilter - CIColorMonochrome"},{"location":"ios/dynamic-type-2016-08-24/","text":"Dynamic Type \u00b6 @available(iOS 7.0, *) Acessibilidade Usu\u00e1rio controla o tamanho das fonts no dispositivo - ExtraSmall - Small - Medium - Large - ExtraLarge - ExtraExtraLarge - ExtraExtraExtraLarge Atualmente existem 10 estilos Title1 (9.0+) Title2 (9.0+) Title3 (9.0+) Headline Subheadline Body Footnote Caption1 Caption2 Callout (9.0+) label . font = UIFont . preferredFontForTextStyle ( UIFontTextStyleBody ) // NSNotificationCenter . defaultCenter (). addObserver ( self , selector : #selector ( callMe ), name : UIContentSizeCategoryDidChangeNotification , object : nil )","title":"Dynamic Type"},{"location":"ios/dynamic-type-2016-08-24/#dynamic-type","text":"@available(iOS 7.0, *) Acessibilidade Usu\u00e1rio controla o tamanho das fonts no dispositivo - ExtraSmall - Small - Medium - Large - ExtraLarge - ExtraExtraLarge - ExtraExtraExtraLarge Atualmente existem 10 estilos Title1 (9.0+) Title2 (9.0+) Title3 (9.0+) Headline Subheadline Body Footnote Caption1 Caption2 Callout (9.0+) label . font = UIFont . preferredFontForTextStyle ( UIFontTextStyleBody ) // NSNotificationCenter . defaultCenter (). addObserver ( self , selector : #selector ( callMe ), name : UIContentSizeCategoryDidChangeNotification , object : nil )","title":"Dynamic Type"},{"location":"ios/javascriptcore-2016-08-23/","text":"JavaScriptCore \u00b6 @available(iOS 7.0, *) Wrapper no motor JavaScript do WebKit JSContext, equivalente \u00e0 window JSValue, tipo din\u00e2mico, faz a tradu\u00e7\u00e3o \u00c9 o que torna o ReactNative poss\u00edvel let context = JSContext () context . evaluateScript ( \"var sum = 1 + 2\" ) context . evaluateScript ( \"var double = function(value) { return value * 2 }\" ) let result : JSValue = context . evaluateScript ( \"double(sum)\" ) print ( result . toInt32 ()) // 6 context . evaluateScript ( \"var names = ['jean', 'luiz']\" ) let names = context . objectForKeyedSubscript ( \"names\" ) let firstName = names . objectAtIndexedSubscript ( 0 ) print ( firstName . toString ()) // jean context . evaluateScript ( \"var double = function(value) { return value * 2 }\" ) // ... let double = context . objectForKeyedSubscript ( \"double\" ) let result = double . callWithArguments ([ 5 ]) print ( result . toInt32 ()) // 10 context . exceptionHandler = { context , exception in print ( exception ) } // ... context . evaluateScript ( \"var double = function(value) { return value * }\" ) // SyntaxError: Unexpected token '}'","title":"JavaScriptCore"},{"location":"ios/javascriptcore-2016-08-23/#javascriptcore","text":"@available(iOS 7.0, *) Wrapper no motor JavaScript do WebKit JSContext, equivalente \u00e0 window JSValue, tipo din\u00e2mico, faz a tradu\u00e7\u00e3o \u00c9 o que torna o ReactNative poss\u00edvel let context = JSContext () context . evaluateScript ( \"var sum = 1 + 2\" ) context . evaluateScript ( \"var double = function(value) { return value * 2 }\" ) let result : JSValue = context . evaluateScript ( \"double(sum)\" ) print ( result . toInt32 ()) // 6 context . evaluateScript ( \"var names = ['jean', 'luiz']\" ) let names = context . objectForKeyedSubscript ( \"names\" ) let firstName = names . objectAtIndexedSubscript ( 0 ) print ( firstName . toString ()) // jean context . evaluateScript ( \"var double = function(value) { return value * 2 }\" ) // ... let double = context . objectForKeyedSubscript ( \"double\" ) let result = double . callWithArguments ([ 5 ]) print ( result . toInt32 ()) // 10 context . exceptionHandler = { context , exception in print ( exception ) } // ... context . evaluateScript ( \"var double = function(value) { return value * }\" ) // SyntaxError: Unexpected token '}'","title":"JavaScriptCore"},{"location":"ios/low-power-mode-2016-08-24/","text":"Low Power Mode \u00b6 @available(iOS 9.0, *) Modo de economia de bateria iOS reduz processamentos, brilho da tela, requisi\u00e7\u00f5es em background etc Informa\u00e7\u00e3o pode ser obtida diretamente ou via NotificationCenter if NSProcessInfo . processInfo (). lowPowerModeEnabled { // evitar autoplay em v\u00eddeos // diminuir atualiza\u00e7\u00e3o do GPS // evitar requisi\u00e7\u00f5es de rede // etc } else { // } NSNotificationCenter . defaultCenter (). addObserver ( self , selector : #selector ( callMe ), name : NSProcessInfoPowerStateDidChangeNotification , object : nil )","title":"Low Power Mode"},{"location":"ios/low-power-mode-2016-08-24/#low-power-mode","text":"@available(iOS 9.0, *) Modo de economia de bateria iOS reduz processamentos, brilho da tela, requisi\u00e7\u00f5es em background etc Informa\u00e7\u00e3o pode ser obtida diretamente ou via NotificationCenter if NSProcessInfo . processInfo (). lowPowerModeEnabled { // evitar autoplay em v\u00eddeos // diminuir atualiza\u00e7\u00e3o do GPS // evitar requisi\u00e7\u00f5es de rede // etc } else { // } NSNotificationCenter . defaultCenter (). addObserver ( self , selector : #selector ( callMe ), name : NSProcessInfoPowerStateDidChangeNotification , object : nil )","title":"Low Power Mode"},{"location":"ios/nscache-2016-08-23/","text":"NSCache \u00b6 @available(iOS 4.0, *) Similar a um NSDictionary Algoritmo de expira\u00e7\u00e3o \u00e9 interno, possivelmente LRU Gerenciamento autom\u00e1tico de mem\u00f3ria Chave e valor s\u00e3o refer\u00eancias Thread-safe func objectForKey ( key : AnyObject ) -> AnyObject ? func setObject ( obj : AnyObject , forKey key : AnyObject ) func removeObjectForKey ( key : AnyObject ) func removeAllObjects () let cache = NSCache () cache . setObject ( \"Jean\" , forKey : \"name\" ) print ( cache . objectForKey ( \"name\" )) // Jean","title":"NSCache"},{"location":"ios/nscache-2016-08-23/#nscache","text":"@available(iOS 4.0, *) Similar a um NSDictionary Algoritmo de expira\u00e7\u00e3o \u00e9 interno, possivelmente LRU Gerenciamento autom\u00e1tico de mem\u00f3ria Chave e valor s\u00e3o refer\u00eancias Thread-safe func objectForKey ( key : AnyObject ) -> AnyObject ? func setObject ( obj : AnyObject , forKey key : AnyObject ) func removeObjectForKey ( key : AnyObject ) func removeAllObjects () let cache = NSCache () cache . setObject ( \"Jean\" , forKey : \"name\" ) print ( cache . objectForKey ( \"name\" )) // Jean","title":"NSCache"},{"location":"ios/nsdatadetector-2016-08-23/","text":"NSDataDetector \u00b6 @available(iOS 4.0, *) Subclasse de NSRegularExpression Detecta v\u00e1rios tipos de dados: Datas, endere\u00e7os, links, telefones... Apresenta boa precis\u00e3o NSTextCheckingType.Link \u00b6 let text = \"Veja mais em: http://developer.apple.com/\" let detector = try NSDataDetector ( types : NSTextCheckingType . Link . rawValue ) let match = detector . firstMatchInString ( text , options : [], range : NSRange ( location : 0 , length : text . utf16 . count )) print ( match ?. URL ) // Optional(http://developer.apple.com/) NSTextCheckingType.Address \u00b6 let text = \"Av dos Andradas, Belo Horizonte, MG - 30260-070\" let detector = try NSDataDetector ( types : NSTextCheckingType . Address . rawValue ) let match = detector . firstMatchInString ( text , options : [], range : NSRange ( location : 0 , length : text . utf16 . count )) print ( match ?. addressComponents ) // Optional([\"ZIP\": \"30260-070\", \"City\": \"Belo Horizonte\", \"State\": \"MG\", \"Street\": \"Av dos Andradas\"]) Chega de REGEXES malucas para validar email \u00b6 let text = \"contato@jeanpimentel.com.br\" let detector = try NSDataDetector ( types : NSTextCheckingType . Link . rawValue ) let match = detector . firstMatchInString ( text , options : [], range : NSRange ( location : 0 , length : text . utf16 . count )) print ( match ?. URL ) // Optional(mailto:contato@jeanpimentel.com.br) Exemplo com extension \u00b6 extension String { func isEmail () -> Bool { guard let detector = NSDataDetector ( types : NSTextCheckingType . Link . rawValue ) else { return false } let match = detector . firstMatchInString ( self , options : [], range : NSRange ( location : 0 , length : self . utf16 . count )) return match ?. URL ?. scheme == \"mailto\" } } Resultado \u00b6 print ( \"jos\u00e9@email.com\" . isEmail ()) // true print ( \"\u0430\u0448\u043a\u0430@\u044f\u0449\u0438\u043a.\u0440\u0444\" . isEmail ()) // true","title":"NSDataDetector"},{"location":"ios/nsdatadetector-2016-08-23/#nsdatadetector","text":"@available(iOS 4.0, *) Subclasse de NSRegularExpression Detecta v\u00e1rios tipos de dados: Datas, endere\u00e7os, links, telefones... Apresenta boa precis\u00e3o","title":"NSDataDetector"},{"location":"ios/nsdatadetector-2016-08-23/#nstextcheckingtypelink","text":"let text = \"Veja mais em: http://developer.apple.com/\" let detector = try NSDataDetector ( types : NSTextCheckingType . Link . rawValue ) let match = detector . firstMatchInString ( text , options : [], range : NSRange ( location : 0 , length : text . utf16 . count )) print ( match ?. URL ) // Optional(http://developer.apple.com/)","title":"NSTextCheckingType.Link"},{"location":"ios/nsdatadetector-2016-08-23/#nstextcheckingtypeaddress","text":"let text = \"Av dos Andradas, Belo Horizonte, MG - 30260-070\" let detector = try NSDataDetector ( types : NSTextCheckingType . Address . rawValue ) let match = detector . firstMatchInString ( text , options : [], range : NSRange ( location : 0 , length : text . utf16 . count )) print ( match ?. addressComponents ) // Optional([\"ZIP\": \"30260-070\", \"City\": \"Belo Horizonte\", \"State\": \"MG\", \"Street\": \"Av dos Andradas\"])","title":"NSTextCheckingType.Address"},{"location":"ios/nsdatadetector-2016-08-23/#chega-de-regexes-malucas-para-validar-email","text":"let text = \"contato@jeanpimentel.com.br\" let detector = try NSDataDetector ( types : NSTextCheckingType . Link . rawValue ) let match = detector . firstMatchInString ( text , options : [], range : NSRange ( location : 0 , length : text . utf16 . count )) print ( match ?. URL ) // Optional(mailto:contato@jeanpimentel.com.br)","title":"Chega de REGEXES malucas para validar email"},{"location":"ios/nsdatadetector-2016-08-23/#exemplo-com-extension","text":"extension String { func isEmail () -> Bool { guard let detector = NSDataDetector ( types : NSTextCheckingType . Link . rawValue ) else { return false } let match = detector . firstMatchInString ( self , options : [], range : NSRange ( location : 0 , length : self . utf16 . count )) return match ?. URL ?. scheme == \"mailto\" } }","title":"Exemplo com extension"},{"location":"ios/nsdatadetector-2016-08-23/#resultado","text":"print ( \"jos\u00e9@email.com\" . isEmail ()) // true print ( \"\u0430\u0448\u043a\u0430@\u044f\u0449\u0438\u043a.\u0440\u0444\" . isEmail ()) // true","title":"Resultado"},{"location":"ios/string-transform-2016-08-24/","text":"String Transform \u00b6 Antigo CFStringTransform @available(iOS 9.0, *) let text = \"\ud83c\udf55\" . stringByApplyingTransform ( NSStringTransformToUnicodeName , reverse : false ) print ( text ) // {SLICE OF PIZZA} let text = \"Luna\" . stringByApplyingTransform ( NSStringTransformLatinToCyrillic , reverse : false ) print ( text ) // \u041b\u0443\u043d\u0430 let text = \"\u60a8\u597d\" . stringByApplyingTransform ( NSStringTransformMandarinToLatin , reverse : false ) print ( text ) // n\u00edn h\u01ceo let text = \"\u60a8\u597d\" . stringByApplyingTransform ( NSStringTransformMandarinToLatin , reverse : false ) . stringByApplyingTransform ( NSStringTransformStripDiacritics , reverse : false ) print ( text ) // nin hao let text = \"\u0391\u03b8\u03ae\u03bd\u03b1\" . stringByApplyingTransform ( \"Any-Latin; Latin-ASCII; Lower\" , reverse : false ) print ( text ) // athena","title":"String Transform"},{"location":"ios/string-transform-2016-08-24/#string-transform","text":"Antigo CFStringTransform @available(iOS 9.0, *) let text = \"\ud83c\udf55\" . stringByApplyingTransform ( NSStringTransformToUnicodeName , reverse : false ) print ( text ) // {SLICE OF PIZZA} let text = \"Luna\" . stringByApplyingTransform ( NSStringTransformLatinToCyrillic , reverse : false ) print ( text ) // \u041b\u0443\u043d\u0430 let text = \"\u60a8\u597d\" . stringByApplyingTransform ( NSStringTransformMandarinToLatin , reverse : false ) print ( text ) // n\u00edn h\u01ceo let text = \"\u60a8\u597d\" . stringByApplyingTransform ( NSStringTransformMandarinToLatin , reverse : false ) . stringByApplyingTransform ( NSStringTransformStripDiacritics , reverse : false ) print ( text ) // nin hao let text = \"\u0391\u03b8\u03ae\u03bd\u03b1\" . stringByApplyingTransform ( \"Any-Latin; Latin-ASCII; Lower\" , reverse : false ) print ( text ) // athena","title":"String Transform"},{"location":"ios/uiimageview-animation-2016-08-24/","text":"UIImageView.startAnimating \u00b6 @available(iOS 2.0, *) \"GIFs\" Lista de UIImage , frame a frame var images : [ UIImage ] = [] for i in 0. .< 8 { let name = String ( format : \"loading-%d\" , i ) images . append ( UIImage ( named : name ) ! ) } imageView . animationImages = images imageView . animationDuration = 0.8 imageView . animationRepeatCount = 0 imageView . startAnimating ()","title":"UIImageView.startAnimating"},{"location":"ios/uiimageview-animation-2016-08-24/#uiimageviewstartanimating","text":"@available(iOS 2.0, *) \"GIFs\" Lista de UIImage , frame a frame var images : [ UIImage ] = [] for i in 0. .< 8 { let name = String ( format : \"loading-%d\" , i ) images . append ( UIImage ( named : name ) ! ) } imageView . animationImages = images imageView . animationDuration = 0.8 imageView . animationRepeatCount = 0 imageView . startAnimating ()","title":"UIImageView.startAnimating"},{"location":"ios/uiimageview-transition-2016-08-24/","text":"UIImageView.transitionWithView \u00b6 @available(iOS 4.0, *) label . text = \"\ud83d\ude03\" // ... UIView . transitionWithView ( label , duration : 0.5 , options : . TransformationFlipFromLeft , animations : { label . text = \"\ud83d\ude28\" }, completion : nil ) imageView . image = UIImage ( named : \"empty\" ) // ... UIView . transitionWithView ( imageView , duration : 0.5 , options : . TransformationCrossDisolve , animations : { imageView . image = UIImage ( named : \"full\" ) }, completion : nil )","title":"UIImageView.transitionWithView"},{"location":"ios/uiimageview-transition-2016-08-24/#uiimageviewtransitionwithview","text":"@available(iOS 4.0, *) label . text = \"\ud83d\ude03\" // ... UIView . transitionWithView ( label , duration : 0.5 , options : . TransformationFlipFromLeft , animations : { label . text = \"\ud83d\ude28\" }, completion : nil ) imageView . image = UIImage ( named : \"empty\" ) // ... UIView . transitionWithView ( imageView , duration : 0.5 , options : . TransformationCrossDisolve , animations : { imageView . image = UIImage ( named : \"full\" ) }, completion : nil )","title":"UIImageView.transitionWithView"},{"location":"javascript/datetimeformat/","text":"DateTimeFormat \u00b6 We are trying to remove a lot of unnecessary dependencies from our project. One of the libraries is moment.js You can find good options here: https://github.com/you-dont-need/You-Dont-Need-Momentjs Common scenarios: > const now = new Date ( '2020-09-02T16:07:55+00:00' ); > now Wed Sep 02 2020 13 : 07 : 55 GMT - 0300 ( Brasilia Standard Time ) > Intl . DateTimeFormat ( 'en-US' ). format ( now ) \"9/2/2020\" > Intl . DateTimeFormat ( 'en-US' , { dateStyle : \"full\" }). format ( now ) \"Wednesday, September 2, 2020\" > Intl . DateTimeFormat ( 'en-US' , { dateStyle : \"long\" }). format ( now ) \"September 2, 2020\" > Intl . DateTimeFormat ( 'en-US' , { dateStyle : \"medium\" }). format ( now ) \"Sep 2, 2020\" > Intl . DateTimeFormat ( 'en-US' , { dateStyle : \"short\" }). format ( now ) \"9/2/20\" Documentation is available here: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/DateTimeFormat","title":"DateTimeFormat"},{"location":"javascript/datetimeformat/#datetimeformat","text":"We are trying to remove a lot of unnecessary dependencies from our project. One of the libraries is moment.js You can find good options here: https://github.com/you-dont-need/You-Dont-Need-Momentjs Common scenarios: > const now = new Date ( '2020-09-02T16:07:55+00:00' ); > now Wed Sep 02 2020 13 : 07 : 55 GMT - 0300 ( Brasilia Standard Time ) > Intl . DateTimeFormat ( 'en-US' ). format ( now ) \"9/2/2020\" > Intl . DateTimeFormat ( 'en-US' , { dateStyle : \"full\" }). format ( now ) \"Wednesday, September 2, 2020\" > Intl . DateTimeFormat ( 'en-US' , { dateStyle : \"long\" }). format ( now ) \"September 2, 2020\" > Intl . DateTimeFormat ( 'en-US' , { dateStyle : \"medium\" }). format ( now ) \"Sep 2, 2020\" > Intl . DateTimeFormat ( 'en-US' , { dateStyle : \"short\" }). format ( now ) \"9/2/20\" Documentation is available here: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/DateTimeFormat","title":"DateTimeFormat"},{"location":"javascript/references/","text":"JavaScript References \u00b6 The Modern JavaScript Tutorial - Javascript.info","title":"JavaScript References"},{"location":"javascript/references/#javascript-references","text":"The Modern JavaScript Tutorial - Javascript.info","title":"JavaScript References"},{"location":"javascript/run-a-specific-test-in-jest-2020-03-17/","text":"How to run a specific test in jest \u00b6 . / node_modules / jest - cli / bin / jest . js -- watch tests / unit / yourfile . test . js","title":"How to run a specific test in jest"},{"location":"javascript/run-a-specific-test-in-jest-2020-03-17/#how-to-run-a-specific-test-in-jest","text":". / node_modules / jest - cli / bin / jest . js -- watch tests / unit / yourfile . test . js","title":"How to run a specific test in jest"},{"location":"macos/move-an-off-screen-window-back-on-screen-2020-04-23/","text":"Move an off screen window back on screen \u00b6 For some reason, sometimes when I double click on Title Bar, the window shrinks to zero and it's impossible to resize again. Solution: Swipe up with three fingers (Mission Control) Select the window Click on the Window menu, then click Zoom Source: https://superuser.com/questions/55341/move-an-off-screen-window-back-on-screen-on-mac-os-x","title":"Move an off screen window back on screen"},{"location":"macos/move-an-off-screen-window-back-on-screen-2020-04-23/#move-an-off-screen-window-back-on-screen","text":"For some reason, sometimes when I double click on Title Bar, the window shrinks to zero and it's impossible to resize again. Solution: Swipe up with three fingers (Mission Control) Select the window Click on the Window menu, then click Zoom Source: https://superuser.com/questions/55341/move-an-off-screen-window-back-on-screen-on-mac-os-x","title":"Move an off screen window back on screen"},{"location":"meta/references/","text":"References \u00b6 Similar wikis I liked: https://github.com/nikitavoloboev/knowledge/blob/master/other/wiki-workflow.md#similar-wikis-i-liked RichardLitt/meta-knowledge: https://github.com/RichardLitt/meta-knowledge","title":"References"},{"location":"meta/references/#references","text":"Similar wikis I liked: https://github.com/nikitavoloboev/knowledge/blob/master/other/wiki-workflow.md#similar-wikis-i-liked RichardLitt/meta-knowledge: https://github.com/RichardLitt/meta-knowledge","title":"References"},{"location":"python/clean-architecture-in-python-2020-07-13/","text":"Clean Architecture in Python \u00b6 @brandon_rhodes PyOhio 2014 Source: https://www.youtube.com/watch?v=DJtef410XaM \u26a0\ufe0f We programmers spontaneously use subroutines backwards Example: # Listing 1 import requests from urllib import urlencode def find_definition ( word ): q = 'define ' + word url = 'http://api.duckduckgo.com/?' url += urlencode ({ 'q' : q , 'format' : 'json' }) response = requests . get ( url ) # I/O data = response . json () # I/O definition = data [ u 'Definition' ] if definition == u '' : raise ValueError ( 'that is not a word' ) return definition # Listing 2 def find_definition ( word ): q = 'define ' + word url = 'http://api.duckduckgo.com/?' url += urlencode ({ 'q' : q , 'format' : 'json' }) data = call_json_api ( url ) definition = data [ u 'Definition' ] if definition == u '' : raise ValueError ( 'that is not a word' ) return definition def call_json_api ( url ): response = requests . get ( url ) # I/O data = response . json () # I/O return data We have hidden I/O, but have we really decoupled it? How we should do: \u00b6 # Listing 3 def find_definition ( word ): url = build_url ( word ) data = requests . get ( url ) . json () # I/O return pluck_definition ( data ) def build_url ( word ): q = 'define ' + word url = 'http://api.duckduckgo.com/?' url += urlencode ({ 'q' : q , 'format' : 'json' }) return url def pluck_definition ( data ): definition = data [ u 'Definition' ] if definition == u '' : raise ValueError ( 'that is not a word' ) return definition Listing 3 is an architectural success while the others were failures Listing 3 shows in miniature what the Clean Architecture does for entire applications Eminently readable because it remains at a single level of abstraction These names document what each section of code is doing Architecture \u00b6 Listing 1 : procedure Listing 2 : procedure => i/o subrotine (but top level code stills a procedure) Listing 3 : procedure => pure function + pure function = TESTING!!! \ud83d\udc4d Testing Listing 1 or Listing 2 \u00b6 Dependency Injection Mocks Dependency Injection \u00b6 def find_definition ( word , requests = requests ): class FakeRequestsLibrary ( object ): def get ( self , url ): self . url = url return self def json ( self ): return self . data def test_find_definition (): fake = FakeRequestsLibrary () fake . data = { u 'Definition' : 'abc' } definition = find_definition ( 'testword' , requests = fake ) Your mock is not the real library This might look simple for one service But a procedure that also needs a database and filesystem will need lots of injection A high-level function needs every single service required by its subroutines Mocks \u00b6 from mock import patch def test_find_definition (): fake = FakeRequestsLibrary () fake . data = { u 'Definition' : u 'abc' } with patch ( 'requests.get' , fake . get ): definition = find_definition ( 'testword' ) assert definition == 'abc' assert fake . url == ( 'http://api.duckduckgo.com/' '?q=define+testword&format=json' ) DI or patch() Either way, awkward sad \ud83d\ude22 Seems we are fighting with our application How does testing improve when we factor out our logic as in Listing 3? \u00b6 # Listing 3 def find_definition ( word ): url = build_url ( word ) data = requests . get ( url ) . json () # I/O return pluck_definition ( data ) def build_url ( word ): q = 'define ' + word url = 'http://api.duckduckgo.com/?' url += urlencode ({ 'q' : q , 'format' : 'json' }) return url def pluck_definition ( data ): definition = data [ u 'Definition' ] if definition == u '' : raise ValueError ( 'that is not a word' ) return definition By definition, pure functions can be tested using only data def test_build_url (): assert build_url ( 'word' ) == 'http://api.duckduckgo.com/?q=define+word&format=json' def test_build_url_with_punctuation (): assert build_url ( 'what?!' ) == 'http://api.duckduckgo.com/?q=define+what %3F %21&format=json' def test_build_url_with_hyphen (): assert build_url ( 'hyphen-ate' ) == 'http://api.duckduckgo.com/?q=define+hyphen-ate&format=json' def test_pluck_definition (): assert pluck_definition ({ u 'Definition' : u 'something' }) == 'something' def test_pluck_definition_missing (): with pytest . raises ( ValueError ): pluck_definition ({ u 'Definition' : u '' }) No special set-up No special preparation Test calls are symmetric with normal calls A symptom of coupling: having lot of permutations \u00b6 call_test(good_url, good_data) call_test(bad_url1, whatever) call_test(bad_url2, whatever) call_test(bad_url3, whatever) call_test(good_url, bad_data1) call_test(good_url, bad_data2) call_test(good_url, bad_data3) Clean Architecture \u00b6 Top level = IO, bottom level = pure functions 1st level - Frameworks and Drives: Devices, Web, DB, External Interfaces, UI 2nd level - Interface Adapters: Controllers, Gateways, Presenters 3rd level - Application Business Rules - Use Cases 4th level - Enterprise Business Rules - Entities In general, the further in you go, the higher level the software becomes. The outer circles are mechanisms. The inner circles are policies. The important thing is that isolated, simple data structures are passed across the boundaries. When any of the external parts of the system become obsolete, like the database, or the web framework, you can replace those obsolete elements with a minimum of fuss. Functional programming \u00b6 LISP, Haskell, Clojure, F# Functional languages naturally lead you to process data structures while avoiding side-effect I/O # I/O as a side effect def uppercase_words ( wordlist ): for word in wordlist : word = word . upper () print word # Logic with zero side-effects def process_words ( wordlist ): for word in wordlist : yield word . upper () # I/O goes outside of logic def procedural_glue ( wordlist ): for word in process_words ( wordlist ): print word Procedural code: Output as-you-go Functional code: Stages that each produce data, that gets output at the end Why functional? Because of immutability? The biggest advantage of data in a functional programming style is not its immutability It is simply the fact that it is data! 1986 \u00b6 McIlroy vs. Knuth \u201cGiven a text file and an integer k print the k most common words in the file (and the number of their occurrences) in decreasing frequency. \u201d Knuth: 10 pages of Pascal McIlroy: 6-line shell script tr -cs A-Za-z '\\n' | tr A-Z a-z | sort | uniq -c | sort -rn | sed ${ 1 } q Traditional lesson: Use small simple tools that can easily be linked together But I want to draw a different lesson: The shell script is simpler because it operates through the stepwise transformation of data Real world examples \u00b6 Skyfield https://rhodesmill.org/skyfield/ Object-based API backed by dozens of pure functions that implement the actual operations The miserable thing about a method is that it implicitly depends upon the state of the whole object The beautiful thing about a function is that it explicitly depends upon a specific list of arguments Luca https://github.com/brandon-rhodes/luca Temptation : Compute output fields as the form is running, writing their text into the PDF Instead: phases First read the entire tax form Then do all the computations Finally write to the PDF Wrap-up \u00b6 Old: To get rid of I/O, make it subordinate New: To really get rid of someone, make them a manager! Wheeler: In 1952 he gave us the sub-routine We have yet to realize its full power and promise! When a programme has been made from a set of sub-routines the breakdown of the code is more complete than it otherwise would be. This allows the coder to concentrate on one section of the program at a time without the overall detailed programme continually intruding . Thus the sub-routines can be more easily coded and be tested in isolation from the rest of the programme. When the entire programme has to be tested it is with the foreknowledge that the incidence of mistakes in the subroutine is \u2014 zero (or at least one order of magnitude below that of the untested portions of the programme!)","title":"Clean Architecture in Python"},{"location":"python/clean-architecture-in-python-2020-07-13/#clean-architecture-in-python","text":"@brandon_rhodes PyOhio 2014 Source: https://www.youtube.com/watch?v=DJtef410XaM \u26a0\ufe0f We programmers spontaneously use subroutines backwards Example: # Listing 1 import requests from urllib import urlencode def find_definition ( word ): q = 'define ' + word url = 'http://api.duckduckgo.com/?' url += urlencode ({ 'q' : q , 'format' : 'json' }) response = requests . get ( url ) # I/O data = response . json () # I/O definition = data [ u 'Definition' ] if definition == u '' : raise ValueError ( 'that is not a word' ) return definition # Listing 2 def find_definition ( word ): q = 'define ' + word url = 'http://api.duckduckgo.com/?' url += urlencode ({ 'q' : q , 'format' : 'json' }) data = call_json_api ( url ) definition = data [ u 'Definition' ] if definition == u '' : raise ValueError ( 'that is not a word' ) return definition def call_json_api ( url ): response = requests . get ( url ) # I/O data = response . json () # I/O return data We have hidden I/O, but have we really decoupled it?","title":"Clean Architecture in Python"},{"location":"python/clean-architecture-in-python-2020-07-13/#how-we-should-do","text":"# Listing 3 def find_definition ( word ): url = build_url ( word ) data = requests . get ( url ) . json () # I/O return pluck_definition ( data ) def build_url ( word ): q = 'define ' + word url = 'http://api.duckduckgo.com/?' url += urlencode ({ 'q' : q , 'format' : 'json' }) return url def pluck_definition ( data ): definition = data [ u 'Definition' ] if definition == u '' : raise ValueError ( 'that is not a word' ) return definition Listing 3 is an architectural success while the others were failures Listing 3 shows in miniature what the Clean Architecture does for entire applications Eminently readable because it remains at a single level of abstraction These names document what each section of code is doing","title":"How we should do:"},{"location":"python/clean-architecture-in-python-2020-07-13/#architecture","text":"Listing 1 : procedure Listing 2 : procedure => i/o subrotine (but top level code stills a procedure) Listing 3 : procedure => pure function + pure function = TESTING!!! \ud83d\udc4d","title":"Architecture"},{"location":"python/clean-architecture-in-python-2020-07-13/#testing-listing-1-or-listing-2","text":"Dependency Injection Mocks","title":"Testing Listing 1 or Listing 2"},{"location":"python/clean-architecture-in-python-2020-07-13/#dependency-injection","text":"def find_definition ( word , requests = requests ): class FakeRequestsLibrary ( object ): def get ( self , url ): self . url = url return self def json ( self ): return self . data def test_find_definition (): fake = FakeRequestsLibrary () fake . data = { u 'Definition' : 'abc' } definition = find_definition ( 'testword' , requests = fake ) Your mock is not the real library This might look simple for one service But a procedure that also needs a database and filesystem will need lots of injection A high-level function needs every single service required by its subroutines","title":"Dependency Injection"},{"location":"python/clean-architecture-in-python-2020-07-13/#mocks","text":"from mock import patch def test_find_definition (): fake = FakeRequestsLibrary () fake . data = { u 'Definition' : u 'abc' } with patch ( 'requests.get' , fake . get ): definition = find_definition ( 'testword' ) assert definition == 'abc' assert fake . url == ( 'http://api.duckduckgo.com/' '?q=define+testword&format=json' ) DI or patch() Either way, awkward sad \ud83d\ude22 Seems we are fighting with our application","title":"Mocks"},{"location":"python/clean-architecture-in-python-2020-07-13/#how-does-testing-improve-when-we-factor-out-our-logic-as-in-listing-3","text":"# Listing 3 def find_definition ( word ): url = build_url ( word ) data = requests . get ( url ) . json () # I/O return pluck_definition ( data ) def build_url ( word ): q = 'define ' + word url = 'http://api.duckduckgo.com/?' url += urlencode ({ 'q' : q , 'format' : 'json' }) return url def pluck_definition ( data ): definition = data [ u 'Definition' ] if definition == u '' : raise ValueError ( 'that is not a word' ) return definition By definition, pure functions can be tested using only data def test_build_url (): assert build_url ( 'word' ) == 'http://api.duckduckgo.com/?q=define+word&format=json' def test_build_url_with_punctuation (): assert build_url ( 'what?!' ) == 'http://api.duckduckgo.com/?q=define+what %3F %21&format=json' def test_build_url_with_hyphen (): assert build_url ( 'hyphen-ate' ) == 'http://api.duckduckgo.com/?q=define+hyphen-ate&format=json' def test_pluck_definition (): assert pluck_definition ({ u 'Definition' : u 'something' }) == 'something' def test_pluck_definition_missing (): with pytest . raises ( ValueError ): pluck_definition ({ u 'Definition' : u '' }) No special set-up No special preparation Test calls are symmetric with normal calls","title":"How does testing improve when we factor out our logic as in Listing 3?"},{"location":"python/clean-architecture-in-python-2020-07-13/#a-symptom-of-coupling-having-lot-of-permutations","text":"call_test(good_url, good_data) call_test(bad_url1, whatever) call_test(bad_url2, whatever) call_test(bad_url3, whatever) call_test(good_url, bad_data1) call_test(good_url, bad_data2) call_test(good_url, bad_data3)","title":"A symptom of coupling: having lot of permutations"},{"location":"python/clean-architecture-in-python-2020-07-13/#clean-architecture","text":"Top level = IO, bottom level = pure functions 1st level - Frameworks and Drives: Devices, Web, DB, External Interfaces, UI 2nd level - Interface Adapters: Controllers, Gateways, Presenters 3rd level - Application Business Rules - Use Cases 4th level - Enterprise Business Rules - Entities In general, the further in you go, the higher level the software becomes. The outer circles are mechanisms. The inner circles are policies. The important thing is that isolated, simple data structures are passed across the boundaries. When any of the external parts of the system become obsolete, like the database, or the web framework, you can replace those obsolete elements with a minimum of fuss.","title":"Clean Architecture"},{"location":"python/clean-architecture-in-python-2020-07-13/#functional-programming","text":"LISP, Haskell, Clojure, F# Functional languages naturally lead you to process data structures while avoiding side-effect I/O # I/O as a side effect def uppercase_words ( wordlist ): for word in wordlist : word = word . upper () print word # Logic with zero side-effects def process_words ( wordlist ): for word in wordlist : yield word . upper () # I/O goes outside of logic def procedural_glue ( wordlist ): for word in process_words ( wordlist ): print word Procedural code: Output as-you-go Functional code: Stages that each produce data, that gets output at the end Why functional? Because of immutability? The biggest advantage of data in a functional programming style is not its immutability It is simply the fact that it is data!","title":"Functional programming"},{"location":"python/clean-architecture-in-python-2020-07-13/#1986","text":"McIlroy vs. Knuth \u201cGiven a text file and an integer k print the k most common words in the file (and the number of their occurrences) in decreasing frequency. \u201d Knuth: 10 pages of Pascal McIlroy: 6-line shell script tr -cs A-Za-z '\\n' | tr A-Z a-z | sort | uniq -c | sort -rn | sed ${ 1 } q Traditional lesson: Use small simple tools that can easily be linked together But I want to draw a different lesson: The shell script is simpler because it operates through the stepwise transformation of data","title":"1986"},{"location":"python/clean-architecture-in-python-2020-07-13/#real-world-examples","text":"Skyfield https://rhodesmill.org/skyfield/ Object-based API backed by dozens of pure functions that implement the actual operations The miserable thing about a method is that it implicitly depends upon the state of the whole object The beautiful thing about a function is that it explicitly depends upon a specific list of arguments Luca https://github.com/brandon-rhodes/luca Temptation : Compute output fields as the form is running, writing their text into the PDF Instead: phases First read the entire tax form Then do all the computations Finally write to the PDF","title":"Real world examples"},{"location":"python/clean-architecture-in-python-2020-07-13/#wrap-up","text":"Old: To get rid of I/O, make it subordinate New: To really get rid of someone, make them a manager! Wheeler: In 1952 he gave us the sub-routine We have yet to realize its full power and promise! When a programme has been made from a set of sub-routines the breakdown of the code is more complete than it otherwise would be. This allows the coder to concentrate on one section of the program at a time without the overall detailed programme continually intruding . Thus the sub-routines can be more easily coded and be tested in isolation from the rest of the programme. When the entire programme has to be tested it is with the foreknowledge that the incidence of mistakes in the subroutine is \u2014 zero (or at least one order of magnitude below that of the untested portions of the programme!)","title":"Wrap-up"},{"location":"python/colorized-logs-2020-05-15/","text":"Colorized logs \u00b6 Without changing the code Installation \u00b6 The coloredlogs package is available on PyPI which means installation should be as simple as: pip install coloredlogs Setup \u00b6 You can set everything on code, but I'm not using it because I don't want to introduce a new dependency. So, there is a MAGIC way: export COLOREDLOGS_AUTO_INSTALL = 1 export COLOREDLOGS_LOG_FORMAT = '%(asctime)s %(name)s %(levelname)s %(message)s' export COLOREDLOGS_DATE_FORMAT = '%H:%M:%S' export COLOREDLOGS_FIELD_STYLES = 'asctime=green;name=magenta;levelname=white,bold' make run # or flask run, yarn start etc","title":"Colorized logs"},{"location":"python/colorized-logs-2020-05-15/#colorized-logs","text":"Without changing the code","title":"Colorized logs"},{"location":"python/colorized-logs-2020-05-15/#installation","text":"The coloredlogs package is available on PyPI which means installation should be as simple as: pip install coloredlogs","title":"Installation"},{"location":"python/colorized-logs-2020-05-15/#setup","text":"You can set everything on code, but I'm not using it because I don't want to introduce a new dependency. So, there is a MAGIC way: export COLOREDLOGS_AUTO_INSTALL = 1 export COLOREDLOGS_LOG_FORMAT = '%(asctime)s %(name)s %(levelname)s %(message)s' export COLOREDLOGS_DATE_FORMAT = '%H:%M:%S' export COLOREDLOGS_FIELD_STYLES = 'asctime=green;name=magenta;levelname=white,bold' make run # or flask run, yarn start etc","title":"Setup"},{"location":"python/cron-expressions-to-datetimes-2020-07-16/","text":"Cron expressions to datetimes \u00b6 To convert some cron expressions to future dates, I've been using croniter . Installation \u00b6 The croniter package is available on PyPI which means installation should be as simple as: pip install croniter Using \u00b6 import arrow from croniter import croniter from dateutil import tz # cron expression expression = \"30 6 * * *\" # getting events for the next 15 days calculate_until = arrow . utcnow () . shift ( days = 15 ) . ceil ( \"day\" ) # timezone timezone = \"America/Sao_Paulo\" if not croniter . is_valid ( expression ): raise ValueError ( f \"Invalid when_expression: { expression } \" ) for next_event in croniter ( expression , arrow . now ( tz . gettz ( timezone )) . datetime ): next_date = arrow . get ( next_event , tzinfo = tz . gettz ( timezone )) if next_date > calculate_until : break print ( next_date ) # 2020-07-17T06:30:00-03:00 # 2020-07-18T06:30:00-03:00 # 2020-07-19T06:30:00-03:00 # 2020-07-20T06:30:00-03:00 # 2020-07-21T06:30:00-03:00 # 2020-07-22T06:30:00-03:00 # 2020-07-23T06:30:00-03:00 # 2020-07-24T06:30:00-03:00 # 2020-07-25T06:30:00-03:00 # 2020-07-26T06:30:00-03:00 # 2020-07-27T06:30:00-03:00 # 2020-07-28T06:30:00-03:00 # 2020-07-29T06:30:00-03:00 # 2020-07-30T06:30:00-03:00 # 2020-07-31T06:30:00-03:00","title":"Cron expressions to datetimes"},{"location":"python/cron-expressions-to-datetimes-2020-07-16/#cron-expressions-to-datetimes","text":"To convert some cron expressions to future dates, I've been using croniter .","title":"Cron expressions to datetimes"},{"location":"python/cron-expressions-to-datetimes-2020-07-16/#installation","text":"The croniter package is available on PyPI which means installation should be as simple as: pip install croniter","title":"Installation"},{"location":"python/cron-expressions-to-datetimes-2020-07-16/#using","text":"import arrow from croniter import croniter from dateutil import tz # cron expression expression = \"30 6 * * *\" # getting events for the next 15 days calculate_until = arrow . utcnow () . shift ( days = 15 ) . ceil ( \"day\" ) # timezone timezone = \"America/Sao_Paulo\" if not croniter . is_valid ( expression ): raise ValueError ( f \"Invalid when_expression: { expression } \" ) for next_event in croniter ( expression , arrow . now ( tz . gettz ( timezone )) . datetime ): next_date = arrow . get ( next_event , tzinfo = tz . gettz ( timezone )) if next_date > calculate_until : break print ( next_date ) # 2020-07-17T06:30:00-03:00 # 2020-07-18T06:30:00-03:00 # 2020-07-19T06:30:00-03:00 # 2020-07-20T06:30:00-03:00 # 2020-07-21T06:30:00-03:00 # 2020-07-22T06:30:00-03:00 # 2020-07-23T06:30:00-03:00 # 2020-07-24T06:30:00-03:00 # 2020-07-25T06:30:00-03:00 # 2020-07-26T06:30:00-03:00 # 2020-07-27T06:30:00-03:00 # 2020-07-28T06:30:00-03:00 # 2020-07-29T06:30:00-03:00 # 2020-07-30T06:30:00-03:00 # 2020-07-31T06:30:00-03:00","title":"Using"},{"location":"python/install-python-versions-on-macos-2020-04-28/","text":"Install python versions on macOS \u00b6 you need pyenv brew install pyenv add pyenv path echo 'export PATH=\"$(pyenv root)/shims:$PATH\"' >> ~/.zshrc install python version pyenv install --list | grep 3 .X.Y pyenv install 3 .X.Y python-build: use openssl@1.1 from homebrew python-build: use readline from homebrew Downloading Python-3.X.Y.tar.xz... -> https://www.python.org/ftp/python/3.X.Y/Python-3.X.Y.tar.xz Installing Python-3.X.Y... python-build: use readline from homebrew python-build: use zlib from xcode sdk Installed Python-3.X.Y to /Users/<user>/.pyenv/versions/3.X.Y list installed python versions pyenv versions if you want to change the default version pyenv global 3 .X.Y Source: https://installvirtual.com/how-to-install-python-3-8-on-mac-using-pyenv/","title":"Install python versions on macOS"},{"location":"python/install-python-versions-on-macos-2020-04-28/#install-python-versions-on-macos","text":"you need pyenv brew install pyenv add pyenv path echo 'export PATH=\"$(pyenv root)/shims:$PATH\"' >> ~/.zshrc install python version pyenv install --list | grep 3 .X.Y pyenv install 3 .X.Y python-build: use openssl@1.1 from homebrew python-build: use readline from homebrew Downloading Python-3.X.Y.tar.xz... -> https://www.python.org/ftp/python/3.X.Y/Python-3.X.Y.tar.xz Installing Python-3.X.Y... python-build: use readline from homebrew python-build: use zlib from xcode sdk Installed Python-3.X.Y to /Users/<user>/.pyenv/versions/3.X.Y list installed python versions pyenv versions if you want to change the default version pyenv global 3 .X.Y Source: https://installvirtual.com/how-to-install-python-3-8-on-mac-using-pyenv/","title":"Install python versions on macOS"},{"location":"recipes/brigadeiro/","text":"Brigadeiro \u00b6 Ingredients: \u00b6 1 can of condensed milk 1 tablespoon of butter 2 or 3 tablespoons of cocoa powder How to: \u00b6 Mix the condensed milk and the butter. Bring the pan to the stove and heat it over medium-low heat. Add the cocoa powder while mixing to disolve everything. Keep mixing otherwise it will burn. If it takes a while for the mixture to move and you can see the pan, then your brigadeiro is ready. Grease a dish with thin layer of butter and pour the mixture on it. Let it cool and eat!","title":"Brigadeiro"},{"location":"recipes/brigadeiro/#brigadeiro","text":"","title":"Brigadeiro"},{"location":"recipes/brigadeiro/#ingredients","text":"1 can of condensed milk 1 tablespoon of butter 2 or 3 tablespoons of cocoa powder","title":"Ingredients:"},{"location":"recipes/brigadeiro/#how-to","text":"Mix the condensed milk and the butter. Bring the pan to the stove and heat it over medium-low heat. Add the cocoa powder while mixing to disolve everything. Keep mixing otherwise it will burn. If it takes a while for the mixture to move and you can see the pan, then your brigadeiro is ready. Grease a dish with thin layer of butter and pour the mixture on it. Let it cool and eat!","title":"How to:"},{"location":"recipes/easy-donuts-2-ingredients/","text":"Easy donuts \u00b6 2 Ingredient Easy No Yeast Donuts recipe : 140g Self Rising Flour ( 1 cup ) 190g Any Plain Yogurt ( 6.5 ounces + 1/2 tbsp ) SUBSTITUTES: Yogurt can be substituted for milk BUT add only 112 grams of Milk ( 1/2 cup ) Self rising flour can be made TWO ways: 140 grams of plain flour + 1 1/2 tsp baking powder ( 1 cup + 1 1/2 tsp baking powder) 140 grams of plain flour + 1/2 tsp baking soda ( 1 cup + 1/2 tsp baking soda) Glaze for Donuts : 250 gr Powdered Sugar ( 2 cups) 75 gr Butter ( 2/3 Stick ) 3-4 tbsp Milk depending how thin you like your glaze 1 tsp Vanilla Cocoa Powder or Melted Chocolate https://www.youtube.com/watch?v=vzKuobmi3iI","title":"Easy donuts"},{"location":"recipes/easy-donuts-2-ingredients/#easy-donuts","text":"2 Ingredient Easy No Yeast Donuts recipe : 140g Self Rising Flour ( 1 cup ) 190g Any Plain Yogurt ( 6.5 ounces + 1/2 tbsp ) SUBSTITUTES: Yogurt can be substituted for milk BUT add only 112 grams of Milk ( 1/2 cup ) Self rising flour can be made TWO ways: 140 grams of plain flour + 1 1/2 tsp baking powder ( 1 cup + 1 1/2 tsp baking powder) 140 grams of plain flour + 1/2 tsp baking soda ( 1 cup + 1/2 tsp baking soda) Glaze for Donuts : 250 gr Powdered Sugar ( 2 cups) 75 gr Butter ( 2/3 Stick ) 3-4 tbsp Milk depending how thin you like your glaze 1 tsp Vanilla Cocoa Powder or Melted Chocolate https://www.youtube.com/watch?v=vzKuobmi3iI","title":"Easy donuts"},{"location":"web/console-log-2020-05-04/","text":"Console.log and more \u00b6 console.log \u00b6 You don't need to concatenate values const name = \"Jean\"; -console.log('name: ' + name); // DON'T +console.log('name:', name); // DO console.count([label]) \u00b6 function MyComponent ( props ) { console . count ( 'Rendering...' ); ... } Rendering : 1 Rendering : 2 Rendering : 3 Rendering : n console.table(data [, columns]) \u00b6 const elements = [ 'H' , 'He' , 'Li' ] console . table ( elements ) (index) Values 0 \"H\" 1 \"He\" 2 \"Li\" const elements = [ { number : 1 , symbol : \"H\" , name : \"Hydrogen\" , }, { number : 2 , symbol : \"He\" , name : \"Helium\" , } ] console . table ( elements [ 0 ]) (index) Value number 1 symbol \"H\" name \"Hydrogen console . table ( elements ) (index) number symbol name 0 1 \"H\" Hydrogen 1 2 \"He\" Helium console . table ( elements , [ \"number\" , \"name\" ]) (index) number name 0 1 Hydrogen 1 2 Helium Source: https://developer.mozilla.org/en-US/docs/Web/API/Console","title":"Console.log and more"},{"location":"web/console-log-2020-05-04/#consolelog-and-more","text":"","title":"Console.log and more"},{"location":"web/console-log-2020-05-04/#consolelog","text":"You don't need to concatenate values const name = \"Jean\"; -console.log('name: ' + name); // DON'T +console.log('name:', name); // DO","title":"console.log"},{"location":"web/console-log-2020-05-04/#consolecountlabel","text":"function MyComponent ( props ) { console . count ( 'Rendering...' ); ... } Rendering : 1 Rendering : 2 Rendering : 3 Rendering : n","title":"console.count([label])"},{"location":"web/console-log-2020-05-04/#consoletabledata-columns","text":"const elements = [ 'H' , 'He' , 'Li' ] console . table ( elements ) (index) Values 0 \"H\" 1 \"He\" 2 \"Li\" const elements = [ { number : 1 , symbol : \"H\" , name : \"Hydrogen\" , }, { number : 2 , symbol : \"He\" , name : \"Helium\" , } ] console . table ( elements [ 0 ]) (index) Value number 1 symbol \"H\" name \"Hydrogen console . table ( elements ) (index) number symbol name 0 1 \"H\" Hydrogen 1 2 \"He\" Helium console . table ( elements , [ \"number\" , \"name\" ]) (index) number name 0 1 Hydrogen 1 2 Helium Source: https://developer.mozilla.org/en-US/docs/Web/API/Console","title":"console.table(data [, columns])"}]}